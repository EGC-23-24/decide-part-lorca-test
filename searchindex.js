Search.setIndex({"docnames": ["index", "memes", "modules/auth", "modules/booth", "modules/census", "modules/index", "modules/mixnet", "modules/postproc", "modules/store", "modules/visualizer", "modules/voting"], "filenames": ["index.rst", "memes.rst", "modules/auth.rst", "modules/booth.rst", "modules/census.rst", "modules/index.rst", "modules/mixnet.rst", "modules/postproc.rst", "modules/store.rst", "modules/visualizer.rst", "modules/voting.rst"], "titles": ["Welcome to decide\u2019s documentation!", "Memes collection", "Auth Module", "Booth Module", "Census Module", "Decide modules", "Mixnet Module", "Postproc Module", "Store Module", "Visualizer Module", "Voting Module"], "terms": {"The": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10], "object": [0, 2, 4, 6, 8, 10], "thi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10], "i": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10], "implement": [0, 6, 10], "secur": 0, "electron": 0, "vote": [0, 1, 5, 6, 7, 8], "platform": 0, "compli": 0, "seri": 0, "basic": 0, "guarante": 0, "anonym": 0, "secreci": 0, "an": [0, 2, 10], "educ": 0, "design": 0, "studi": 0, "system": [0, 5], "so": 0, "simplic": 0, "take": [0, 5], "preced": 0, "over": 0, "effici": 0, "whenev": 0, "possibl": 0, "therefor": 0, "some": 0, "shortcom": 0, "ar": [0, 6, 10], "assum": 0, "allow": [0, 6], "understand": 0, "extens": 0, "divid": 0, "which": 0, "decoupl": 0, "from": [0, 1, 4, 6, 8, 10], "each": [0, 5, 6, 10], "other": [0, 1], "To": 0, "achiev": 0, "connect": 0, "via": [0, 6, 10], "api": [0, 6], "we": [0, 6], "need": 0, "where": 0, "configur": 0, "rout": 0, "django": [0, 2, 4, 6, 8, 10], "ani": 0, "can": [0, 5, 10], "replac": 0, "individu": 0, "modul": 0, "booth": [0, 2, 5], "censu": [0, 5], "auth": [0, 5, 6, 10], "mixnet": [0, 5], "postproc": [0, 5, 10], "store": [0, 5], "visual": [0, 5], "meme": 0, "collect": 0, "dart": 1, "between": 1, "team": 1, "member": 1, "have": [1, 6], "emerg": 1, "dure": 1, "develop": 1, "project": 1, "help": 1, "foster": 1, "better": 1, "work": 1, "environ": 1, "after": [1, 2, 3, 4, 6, 7, 8, 9, 10], "rumor": 1, "divorc": 1, "when": [1, 4, 6, 8, 10], "you": [1, 5, 10], "review": 1, "branch": 1, "ve": 1, "been": 1, "thoroughli": 1, "onli": 1, "see": 1, "your": 1, "peer": 1, "screw": 1, "up": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], "usual": 1, "A": [1, 4, 6, 8, 10], "m\u00ed": 1, "esto": 1, "me": 1, "lo": 1, "ten\u00e9i": 1, "que": 1, "explicar": 1, "wa": 1, "phrase": 1, "accompani": 1, "memor": 1, "imag": 1, "gentl": 1, "whatsapp": 1, "messag": 1, "gonzalo": 1, "campo": 1, "mej\u00eda": 1, "yo": 1, "cuando": 1, "solucion": 1, "conflicto": 1, "de": 1, "prefer": 1, "y": [1, 6, 10], "document": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], "hasta": 1, "el": 1, "set": [1, 2, 3, 4, 6, 7, 8, 9, 10], "py": 1, "teclado": 1, "alberto": 1, "\u00e1lvaro": 1, "bernal": 1, "caunedo": 1, "hoi": 1, "termin": 1, "matarm": 1, "por": 1, "poner": 1, "794480": 1, "l\u00ednea": 1, "cosa": 1, "utilizada": 1, "del": 1, "a\u00f1o": 1, "pasado": 1, "l\u00f3pez": 1, "benjumea": 1, "novella": 1, "leyendo": 1, "la": 1, "revisi\u00f3n": 1, "pr": 1, "comment": [1, 8], "begin": 1, "war": 1, "alvaro": 1, "color": 1, "he": 1, "hecho": 1, "poca": 1, "incidencia": 1, "c\u00f3digo": 1, "said": 1, "dai": 1, "befor": [1, 2, 3, 4, 6, 7, 8, 9, 10], "deliveri": 1, "well": 1, "seem": 1, "right": 1, "sopa": 1, "do": 1, "just": 1, "anoth": [1, 6], "bulli": 1, "writer": 1, "did": 1, "expect": 1, "anyth": 1, "els": 1, "point": 1, "resurg": 1, "fallen": 1, "soldier": 1, "juanan": 1, "sometim": 1, "life": 1, "ha": 1, "wonder": 1, "twist": 1, "throw": 1, "shit": 1, "himself": 1, "hide": 1, "how": 1, "piss": 1, "off": 1, "noth": 1, "new": [1, 6], "continu": 1, "indiscrimin": 1, "accept": 1, "process": [1, 7, 10], "overwhelm": 1, "resort": 1, "subject": 1, "surpris": 1, "xtremebik": 1, "infinit": 1, "more": [1, 2, 3, 10], "polish": 1, "than": 1, "ardueshop": 1, "panic": 1, "appear": 1, "click": 1, "button": 1, "purchas": 1, "make": [1, 5], "while": 1, "program": 1, "5": [1, 6], "m": [1, 6, 10], "question": [1, 10], "exist": 1, "realli": 1, "angri": 1, "here": 1, "ti": 1, "class": [1, 2, 3, 4, 6, 7, 8, 9, 10], "saint": 1, "kenobi": 1, "etsii": 1, "patron": 1, "programm": 1, "part": [1, 6, 8], "time": [1, 4, 6, 8, 10], "dj": 1, "antichrist": 1, "consequ": 1, "repositori": 1, "full": 1, "spaghetti": 1, "code": [1, 5], "angel": 1, "demon": 1, "actual": 1, "film": 1, "respons": [2, 3, 9], "variou": [2, 3, 6, 7, 9], "function": [2, 3, 4, 6, 7, 10], "section": [2, 3, 5, 6, 7, 9], "compon": [2, 3, 4, 6, 7, 8, 9, 10], "includ": [2, 3, 10], "model": [2, 3], "authent": 2, "customusercreationform": 2, "sourc": [2, 3, 4, 5, 6, 7, 8, 9, 10], "base": [2, 3, 4, 6, 7, 8, 9, 10], "usercreationform": 2, "meta": [2, 10], "field": [2, 4, 6, 8, 10], "usernam": 2, "password1": 2, "password2": 2, "email": 2, "first_nam": 2, "last_nam": 2, "label": 2, "first": [2, 4, 6, 8, 10], "name": [2, 6, 10], "last": [2, 6], "password": 2, "confirm": 2, "alia": [2, 6, 8, 10], "user": 2, "base_field": 2, "form": 2, "emailfield": 2, "charfield": [2, 10], "contrib": 2, "usernamefield": 2, "clean_confirm": 2, "confirm_password": 2, "clean_password_common": 2, "clean_password_lenght": 2, "clean_password_numer": 2, "clean_password_too_similar": 2, "declared_field": 2, "email_clean": 2, "properti": [2, 4, 10], "media": [2, 4, 10], "return": [2, 10], "all": 2, "requir": 2, "render": 2, "widget": 2, "username_clean_exit": 2, "username_clean_lenght": 2, "username_clean_pattern": 2, "getuserview": 2, "apiview": [2, 6, 7], "post": [2, 4, 6, 7, 8, 10], "request": [2, 4, 6, 7, 8, 10], "loginview": 2, "createview": 2, "form_class": 2, "handl": [2, 7, 8], "instanti": 2, "instanc": [2, 6, 10], "pass": 2, "variabl": 2, "check": 2, "": 2, "valid": 2, "template_nam": [2, 3, 4, 9], "login": 2, "html": [2, 3, 4, 9], "logoutview": 2, "registerview": 2, "get_form": 2, "none": [2, 6], "us": [2, 10], "registerviewapi": 2, "logout_view": 2, "main": [2, 5], "userseri": 2, "hyperlinkedmodelseri": [2, 10], "id": [2, 4, 6, 8, 10], "is_staff": 2, "authtestcas": 2, "apitestcas": [2, 6, 7], "setup": [2, 3, 4, 6, 7, 8, 9, 10], "hook": [2, 3, 4, 6, 7, 8, 9, 10], "method": [2, 3, 4, 6, 7, 8, 9, 10], "fixtur": [2, 3, 4, 6, 7, 8, 9, 10], "exercis": [2, 3, 4, 6, 7, 8, 9, 10], "teardown": [2, 3, 4, 6, 7, 8, 9, 10], "deconstruct": [2, 3, 4, 6, 7, 8, 9, 10], "test_getus": 2, "test_getuser_invalid_token": 2, "test_getuser_invented_token": 2, "test_login": 2, "test_login_fail": 2, "test_logout": 2, "test_regist": 2, "test_register_bad_permiss": 2, "test_register_bad_request": 2, "test_register_user_already_exist": 2, "testloginneg": 2, "staticliveservertestcas": [2, 3, 4, 9, 10], "testloginposit": 2, "testregisterneg": 2, "testregisternegativecommonpass": 2, "testregisternegativeemail": 2, "testregisternegativelongusernam": 2, "testregisternegativenumericpass": 2, "testregisternegativepatternusernam": 2, "testregisternegativesimilarpass": 2, "testregisternegativeusernam": 2, "testregisternegativewrongpassword": 2, "testregisterposit": 2, "boothview": 3, "templateview": [3, 4, 9], "get_context_data": [3, 4, 9], "kwarg": [3, 4, 8, 9, 10], "commentboothtestcas": 3, "create_vot": [3, 4, 10], "get_or_create_us": [3, 8, 10], "pk": [3, 6, 8, 10], "test_commentquest": 3, "multiplechoicequestionboothtest": 3, "test_testquestionmultipleopt": 3, "yesnoboothtestcas": 3, "test_testquestionyesno": 3, "boothtestcas": 3, "basetestcas": [3, 4, 8, 10], "testboothnotfound": 3, "testboothredirect": 3, "vital": 4, "decid": [4, 6, 7, 8], "applic": [4, 6, 7, 8], "manag": [4, 6, 8, 10], "relat": [4, 6, 8, 10], "below": [4, 6, 8, 10], "sphinx": [4, 8], "its": [4, 6, 8], "censusadmin": 4, "modeladmin": [4, 10], "list_displai": [4, 10], "voting_id": [4, 6, 8, 10], "voter_id": [4, 8], "list_filt": [4, 10], "search_field": [4, 10], "except": [4, 6, 8, 10], "doesnotexist": [4, 6, 8, 10], "objectdoesnotexist": [4, 6, 8, 10], "multipleobjectsreturn": [4, 6, 8, 10], "wrapper": [4, 6, 8, 10], "defer": [4, 6, 8, 10], "load": [4, 6, 8, 10], "valu": [4, 6, 8, 10], "read": [4, 6, 8, 10], "queri": [4, 6, 8, 10], "execut": [4, 6, 8, 10], "db": [4, 6, 8, 10], "censuscr": 4, "listcreateapiview": [4, 10], "creat": [4, 6], "arg": [4, 10], "list": [4, 8, 10], "permission_class": [4, 10], "perm": [4, 10], "userisstaff": [4, 10], "censusdetail": 4, "retrievedestroyapiview": 4, "destroi": 4, "retriev": 4, "censusexportview": 4, "export_censu": 4, "censusimportview": 4, "import_censu": 4, "censusexportviewtest": 4, "test_census_export_view": 4, "censusimportviewtest": 4, "test_census_import_view": 4, "censustest": 4, "createcensusemptyerror": [4, 10], "createcensussuccess": 4, "createcensusvalueerror": 4, "censustestcas": 4, "test_add_new_vot": 4, "test_add_new_voters_conflict": 4, "test_check_vote_permiss": 4, "test_destroy_vot": 4, "test_list_vot": 4, "exportcensustest": 4, "v": [4, 10], "test_export_censu": 4, "directori": 5, "look": 5, "through": 5, "tabl": 5, "content": 5, "crucial": 6, "focus": 6, "mix": 6, "network": 6, "follow": 6, "provid": [6, 7], "auth_posit": 6, "kei": 6, "pubkei": 6, "accessor": [6, 10], "forward": [6, 10], "revers": [6, 10], "side": [6, 10], "mani": [6, 10], "In": [6, 10], "exampl": [6, 10], "pizza": [6, 10], "top": [6, 10], "manytomanyfield": [6, 10], "related_nam": [6, 10], "manytomanydescriptor": [6, 10], "most": [6, 10], "deleg": [6, 10], "dynam": [6, 10], "defin": [6, 10], "built": [6, 10], "create_forward_many_to_many_manag": [6, 10], "chain_cal": 6, "path": 6, "data": [6, 8, 9], "decrypt": [6, 10], "msg": [6, 10], "fals": [6, 8], "gen_kei": 6, "p": 6, "0": 6, "g": 6, "one": [6, 10], "forwardonetoonedescriptor": [6, 10], "subclass": [6, 10], "child": [6, 10], "parent": [6, 10], "foreignkei": [6, 10], "children": [6, 10], "forwardmanytoonedescriptor": [6, 10], "key_id": 6, "next_auth": 6, "pubkey_id": 6, "shuffl": [6, 10], "b": [6, 8], "256": [6, 10], "k1": 6, "bit": [6, 10], "k2": 6, "k": 6, "k3": 6, "gen_multiple_kei": 6, "n": 6, "4": 6, "clear": 6, "random": 6, "strongrandom": 6, "randint": 6, "1": 6, "rang": 6, "cipher": 6, "encrypt": 6, "d": 6, "multiple_decrypt_shuffl": 6, "sort": 6, "true": [6, 8], "setk": 6, "167": 6, "156": 6, "89": 6, "130": 6, "crypto": 6, "publickei": 6, "elgam": 6, "elgamalobj": 6, "0x": 6, "53": 6, "161": 6, "construct": 6, "4717": 6, "2": 6, "3": 6, "6": 6, "109": 6, "17": 6, "101": 6, "148": 6, "163": 6, "71": 6, "37": 6, "__init__": 6, "c": [6, 10], "gen_perm": 6, "l": 6, "genk": 6, "getk": 6, "multiple_decrypt": 6, "reencrypt": 6, "cipher2": 6, "d2": 6, "x": 6, "shuffle_decrypt": 6, "crypt": 6, "multiple_decrypt_shuffle2": 6, "8": 6, "rand": 6, "int": [6, 7, 8], "nullabl": 6, "posit": 6, "mixnetviewset": 6, "modelviewset": 6, "endpoint": 6, "edit": 6, "public": 6, "str": [6, 7], "url": 6, "queryset": [6, 8, 10], "serializer_class": [6, 8, 10], "mixnetseri": 6, "mixnetcas": 6, "encrypt_msg": [6, 10], "tag": 6, "slow": 6, "test_creat": 6, "test_decrypt": 6, "test_multiple_auth": 6, "emul": 6, "two": 6, "author": 6, "separ": 6, "Then": 6, "compos": 6, "both": 6, "text": [6, 7, 10], "onc": 6, "result": 6, "second": 6, "test_multiple_auths_mock": 6, "test_shuffl": 6, "test_shuffle2": 6, "within": 7, "postprocview": 7, "ident": 7, "option": [7, 10], "type": [7, 10], "equal": 7, "weight": 7, "number": [7, 10], "extraparam": 7, "text_vot": 7, "postproctestcas": 7, "test_ident": 7, "aspect": 8, "storag": 8, "get_next_by_vot": 8, "datetimefield": 8, "is_next": 8, "get_previous_by_vot": 8, "choices_stor": 8, "voter": 8, "voting_typ": 8, "choic": [8, 10], "classic_stor": 8, "yesno": 8, "classic": [8, 10], "storeview": 8, "listapiview": 8, "filter_backend": [8, 10], "django_filt": [8, 10], "rest_framework": [8, 10], "backend": [8, 10], "djangofilterbackend": [8, 10], "filterset_field": [8, 10], "get": [8, 10], "voteseri": 8, "storechoicecas": 8, "gen_vot": 8, "test_filt": 8, "test_gen_vote_invalid": 8, "test_hasvot": 8, "test_store_vot": 8, "test_store_vote_choic": 8, "test_store_vote_text": 8, "test_vot": 8, "test_voting_invalid_typ": 8, "test_voting_statu": 8, "storetextcas": 8, "storeyesnocas": 8, "test_store_vote_yesno": 8, "present": 9, "represent": 9, "visualizerview": 9, "visualizertestcas": 9, "create_classic_vot": [9, 10], "create_comment_voting_start": 9, "create_multiple_choice_voting_start": 9, "create_yesno_voting_start": 9, "test": 9, "test_visualizer_census_chang": 9, "test_visualizer_classic_finish": 9, "test_visualizer_comment_finish": 9, "test_visualizer_multiple_choice_finish": 9, "test_visualizer_not_start": 9, "test_visualizer_started_classic_with_censu": 9, "test_visualizer_started_comment_with_censu": 9, "test_visualizer_started_multiple_choice_with_censu": 9, "test_visualizer_started_no_censu": 9, "test_visualizer_started_yesno_with_censu": 9, "test_visualizer_yesno_finish": 9, "contain": 10, "sever": 10, "questionadmin": 10, "desc": 10, "questionoptionyesnoadmin": 10, "votingadmin": 10, "action": 10, "start": 10, "stop": 10, "talli": 10, "date_hierarchi": 10, "start_dat": 10, "end_dat": 10, "startedfilt": 10, "readonly_field": 10, "pub_kei": 10, "ye": 10, "No": 10, "multipl": 10, "t": 10, "get_type_displai": 10, "reversemanytoonedescriptor": 10, "save": 10, "current": 10, "overrid": 10, "want": 10, "control": 10, "force_insert": 10, "force_upd": 10, "paramet": 10, "insist": 10, "must": 10, "sql": 10, "insert": 10, "updat": 10, "equival": 10, "non": 10, "respect": 10, "normal": 10, "thei": 10, "should": 10, "yesno_opt": 10, "questionopt": 10, "question_id": 10, "questionoptionyesno": 10, "create_pubkei": 10, "do_postproc": 10, "get_vot": 10, "token": 10, "restaur": 10, "place": 10, "onetoonefield": 10, "pub_key_id": 10, "tally_vot": 10, "votingupd": 10, "retrieveupdatedestroyapiview": 10, "put": 10, "kwar": 10, "votingseri": 10, "votingview": 10, "questionoptionseri": 10, "questionoptionyesnoseri": 10, "questionseri": 10, "get_opt": 10, "simplevotingseri": 10, "simplelistfilt": 10, "lookup": 10, "model_admin": 10, "overridden": 10, "tupl": 10, "verbos": 10, "parameter_nam": 10, "titl": 10, "loginerrortest": 10, "passwordwronglogin": 10, "usernamewronglogin": 10, "loginsuccesstest": 10, "successlogin": 10, "questiontestcas": 10, "test_quest": 10, "test_question_opt": 10, "test_question_option_comment_error_str": 10, "test_question_option_error": 10, "test_question_option_error_str": 10, "test_question_option_to_str": 10, "test_question_option_yesno": 10, "test_question_option_yesno_error": 10, "test_question_option_yesno_error_str": 10, "test_question_option_yesno_to_str": 10, "test_question_to_str": 10, "questionstest": 10, "createclassicquestionsuccess": 10, "votingtestcas": 10, "create_comment_vot": 10, "create_multiple_choice_vot": 10, "create_yesno_vot": 10, "store_classic_vot": 10, "store_multiple_choice_vot": 10, "store_yesno_vot": 10, "test_complete_comment_vot": 10, "test_complete_multiple_choice_vot": 10, "test_complete_vot": 10, "test_complete_yesno_vot": 10, "test_create_multiple_choice_voting_from_api": 10, "test_create_voting_from_api": 10, "test_create_voting_from_api_com": 10, "test_update_vot": 10}, "objects": {"authentication": [[2, 0, 0, "-", "serializers"], [2, 0, 0, "-", "tests"], [2, 0, 0, "-", "views"]], "authentication.serializers": [[2, 1, 1, "", "UserSerializer"]], "authentication.serializers.UserSerializer": [[2, 1, 1, "", "Meta"]], "authentication.serializers.UserSerializer.Meta": [[2, 2, 1, "", "fields"], [2, 2, 1, "", "model"]], "authentication.tests": [[2, 1, 1, "", "AuthTestCase"], [2, 1, 1, "", "TestLoginNegative"], [2, 1, 1, "", "TestLoginPositive"], [2, 1, 1, "", "TestRegisterNegative"], [2, 1, 1, "", "TestRegisterPositive"]], "authentication.tests.AuthTestCase": [[2, 3, 1, "", "setUp"], [2, 3, 1, "", "tearDown"], [2, 3, 1, "", "test_getuser"], [2, 3, 1, "", "test_getuser_invalid_token"], [2, 3, 1, "", "test_getuser_invented_token"], [2, 3, 1, "", "test_login"], [2, 3, 1, "", "test_login_fail"], [2, 3, 1, "", "test_logout"], [2, 3, 1, "", "test_register"], [2, 3, 1, "", "test_register_bad_permissions"], [2, 3, 1, "", "test_register_bad_request"], [2, 3, 1, "", "test_register_user_already_exist"]], "authentication.tests.TestLoginNegative": [[2, 3, 1, "", "setUp"], [2, 3, 1, "", "tearDown"], [2, 3, 1, "", "testloginnegative"]], "authentication.tests.TestLoginPositive": [[2, 3, 1, "", "setUp"], [2, 3, 1, "", "tearDown"], [2, 3, 1, "", "testloginpositive"]], "authentication.tests.TestRegisterNegative": [[2, 3, 1, "", "setUp"], [2, 3, 1, "", "tearDown"], [2, 3, 1, "", "testregisternegativecommonpass"], [2, 3, 1, "", "testregisternegativeemail"], [2, 3, 1, "", "testregisternegativelongusername"], [2, 3, 1, "", "testregisternegativenumericpass"], [2, 3, 1, "", "testregisternegativepatternusername"], [2, 3, 1, "", "testregisternegativesimilarpass"], [2, 3, 1, "", "testregisternegativeusername"], [2, 3, 1, "", "testregisternegativewrongpassword"]], "authentication.tests.TestRegisterPositive": [[2, 3, 1, "", "setUp"], [2, 3, 1, "", "tearDown"], [2, 3, 1, "", "testregisterpositive"]], "authentication.views": [[2, 1, 1, "", "CustomUserCreationForm"], [2, 1, 1, "", "GetUserView"], [2, 1, 1, "", "LoginView"], [2, 1, 1, "", "LogoutView"], [2, 1, 1, "", "RegisterView"], [2, 1, 1, "", "RegisterViewAPI"], [2, 5, 1, "", "logout_view"], [2, 5, 1, "", "main"]], "authentication.views.CustomUserCreationForm": [[2, 1, 1, "", "Meta"], [2, 2, 1, "", "base_fields"], [2, 3, 1, "", "clean_confirmation"], [2, 3, 1, "", "clean_password_common"], [2, 3, 1, "", "clean_password_lenght"], [2, 3, 1, "", "clean_password_numeric"], [2, 3, 1, "", "clean_password_too_similar"], [2, 2, 1, "", "declared_fields"], [2, 3, 1, "", "email_clean"], [2, 4, 1, "", "media"], [2, 3, 1, "", "username_clean_exits"], [2, 3, 1, "", "username_clean_lenght"], [2, 3, 1, "", "username_clean_pattern"]], "authentication.views.CustomUserCreationForm.Meta": [[2, 2, 1, "", "fields"], [2, 2, 1, "", "labels"], [2, 2, 1, "", "model"]], "authentication.views.GetUserView": [[2, 3, 1, "", "post"]], "authentication.views.LoginView": [[2, 2, 1, "", "form_class"], [2, 2, 1, "", "model"], [2, 3, 1, "", "post"], [2, 2, 1, "", "template_name"]], "authentication.views.LogoutView": [[2, 3, 1, "", "post"]], "authentication.views.RegisterView": [[2, 2, 1, "", "form_class"], [2, 3, 1, "", "get_form"], [2, 2, 1, "", "model"], [2, 3, 1, "", "post"], [2, 2, 1, "", "template_name"]], "authentication.views.RegisterViewAPI": [[2, 3, 1, "", "post"]], "booth": [[3, 0, 0, "-", "test_selenium"], [3, 0, 0, "-", "tests"], [3, 0, 0, "-", "views"]], "booth.test_selenium": [[3, 1, 1, "", "CommentBoothTestCase"], [3, 1, 1, "", "MultipleChoiceQuestionBoothTest"], [3, 1, 1, "", "YesNoBoothTestCase"]], "booth.test_selenium.CommentBoothTestCase": [[3, 3, 1, "", "create_voting"], [3, 3, 1, "", "get_or_create_user"], [3, 3, 1, "", "setUp"], [3, 3, 1, "", "tearDown"], [3, 3, 1, "", "test_commentquestion"]], "booth.test_selenium.MultipleChoiceQuestionBoothTest": [[3, 3, 1, "", "create_voting"], [3, 3, 1, "", "get_or_create_user"], [3, 3, 1, "", "setUp"], [3, 3, 1, "", "tearDown"], [3, 3, 1, "", "test_testquestionmultipleoptions"]], "booth.test_selenium.YesNoBoothTestCase": [[3, 3, 1, "", "create_voting"], [3, 3, 1, "", "get_or_create_user"], [3, 3, 1, "", "setUp"], [3, 3, 1, "", "tearDown"], [3, 3, 1, "", "test_testquestionyesno"]], "booth.tests": [[3, 1, 1, "", "BoothTestCase"]], "booth.tests.BoothTestCase": [[3, 3, 1, "", "setUp"], [3, 3, 1, "", "tearDown"], [3, 3, 1, "", "testBoothNotFound"], [3, 3, 1, "", "testBoothRedirection"]], "booth.views": [[3, 1, 1, "", "BoothView"]], "booth.views.BoothView": [[3, 3, 1, "", "get_context_data"], [3, 2, 1, "", "template_name"]], "census": [[4, 0, 0, "-", "admin"], [4, 0, 0, "-", "models"], [4, 0, 0, "-", "tests"], [4, 0, 0, "-", "views"]], "census.admin": [[4, 1, 1, "", "CensusAdmin"]], "census.admin.CensusAdmin": [[4, 2, 1, "", "list_display"], [4, 2, 1, "", "list_filter"], [4, 4, 1, "", "media"], [4, 2, 1, "", "search_fields"]], "census.models": [[4, 1, 1, "", "Census"]], "census.models.Census": [[4, 6, 1, "", "DoesNotExist"], [4, 6, 1, "", "MultipleObjectsReturned"], [4, 2, 1, "", "id"], [4, 2, 1, "", "objects"], [4, 2, 1, "", "voter_id"], [4, 2, 1, "", "voting_id"]], "census.tests": [[4, 1, 1, "", "CensusExportViewTest"], [4, 1, 1, "", "CensusImportViewTest"], [4, 1, 1, "", "CensusTest"], [4, 1, 1, "", "CensusTestCase"], [4, 1, 1, "", "ExportCensusTest"]], "census.tests.CensusExportViewTest": [[4, 3, 1, "", "create_voting"], [4, 3, 1, "", "setUp"], [4, 3, 1, "", "test_census_export_view"]], "census.tests.CensusImportViewTest": [[4, 3, 1, "", "create_voting"], [4, 3, 1, "", "setUp"], [4, 3, 1, "", "test_census_import_view"]], "census.tests.CensusTest": [[4, 3, 1, "", "createCensusEmptyError"], [4, 3, 1, "", "createCensusSuccess"], [4, 3, 1, "", "createCensusValueError"], [4, 3, 1, "", "setUp"], [4, 3, 1, "", "tearDown"]], "census.tests.CensusTestCase": [[4, 3, 1, "", "setUp"], [4, 3, 1, "", "tearDown"], [4, 3, 1, "", "test_add_new_voters"], [4, 3, 1, "", "test_add_new_voters_conflict"], [4, 3, 1, "", "test_check_vote_permissions"], [4, 3, 1, "", "test_destroy_voter"], [4, 3, 1, "", "test_list_voting"]], "census.tests.ExportCensusTest": [[4, 3, 1, "", "create_voters"], [4, 3, 1, "", "create_voting"], [4, 3, 1, "", "setUp"], [4, 3, 1, "", "test_export_census"]], "census.views": [[4, 1, 1, "", "CensusCreate"], [4, 1, 1, "", "CensusDetail"], [4, 1, 1, "", "CensusExportView"], [4, 1, 1, "", "CensusImportView"], [4, 5, 1, "", "export_census"]], "census.views.CensusCreate": [[4, 3, 1, "", "create"], [4, 3, 1, "", "list"], [4, 2, 1, "", "permission_classes"]], "census.views.CensusDetail": [[4, 3, 1, "", "destroy"], [4, 3, 1, "", "retrieve"]], "census.views.CensusExportView": [[4, 3, 1, "", "get_context_data"], [4, 2, 1, "", "template_name"]], "census.views.CensusImportView": [[4, 3, 1, "", "post"], [4, 2, 1, "", "template_name"]], "mixnet": [[6, 0, 0, "-", "mixcrypt"], [6, 0, 0, "-", "models"], [6, 0, 0, "-", "tests"], [6, 0, 0, "-", "views"]], "mixnet.mixcrypt": [[6, 1, 1, "", "MixCrypt"], [6, 5, 1, "", "gen_multiple_key"], [6, 5, 1, "", "multiple_decrypt"], [6, 5, 1, "", "multiple_decrypt_shuffle"], [6, 5, 1, "", "multiple_decrypt_shuffle2"], [6, 5, 1, "", "rand"]], "mixnet.mixcrypt.MixCrypt": [[6, 3, 1, "", "__init__"], [6, 3, 1, "", "decrypt"], [6, 3, 1, "", "encrypt"], [6, 3, 1, "", "gen_perm"], [6, 3, 1, "", "genk"], [6, 3, 1, "", "getk"], [6, 3, 1, "", "multiple_decrypt"], [6, 3, 1, "", "reencrypt"], [6, 3, 1, "", "setk"], [6, 3, 1, "", "shuffle"], [6, 3, 1, "", "shuffle_decrypt"]], "mixnet.models": [[6, 1, 1, "", "Mixnet"]], "mixnet.models.Mixnet": [[6, 6, 1, "", "DoesNotExist"], [6, 6, 1, "", "MultipleObjectsReturned"], [6, 2, 1, "", "auth_position"], [6, 2, 1, "", "auths"], [6, 3, 1, "", "chain_call"], [6, 3, 1, "", "decrypt"], [6, 3, 1, "", "gen_key"], [6, 2, 1, "", "id"], [6, 2, 1, "", "key"], [6, 2, 1, "", "key_id"], [6, 3, 1, "", "next_auths"], [6, 2, 1, "", "objects"], [6, 2, 1, "", "pubkey"], [6, 2, 1, "", "pubkey_id"], [6, 3, 1, "", "shuffle"], [6, 2, 1, "", "voting_id"]], "mixnet.tests": [[6, 1, 1, "", "MixnetCase"]], "mixnet.tests.MixnetCase": [[6, 3, 1, "", "encrypt_msgs"], [6, 3, 1, "", "setUp"], [6, 2, 1, "", "tags"], [6, 3, 1, "", "tearDown"], [6, 3, 1, "", "test_create"], [6, 3, 1, "", "test_decrypt"], [6, 3, 1, "", "test_multiple_auths"], [6, 3, 1, "", "test_multiple_auths_mock"], [6, 3, 1, "", "test_shuffle"], [6, 3, 1, "", "test_shuffle2"]], "mixnet.views": [[6, 1, 1, "", "Decrypt"], [6, 1, 1, "", "MixnetViewSet"], [6, 1, 1, "", "Shuffle"]], "mixnet.views.Decrypt": [[6, 3, 1, "", "post"]], "mixnet.views.MixnetViewSet": [[6, 3, 1, "", "create"], [6, 2, 1, "", "queryset"], [6, 2, 1, "", "serializer_class"]], "mixnet.views.Shuffle": [[6, 3, 1, "", "post"]], "postproc": [[7, 0, 0, "-", "tests"], [7, 0, 0, "-", "views"]], "postproc.tests": [[7, 1, 1, "", "PostProcTestCase"]], "postproc.tests.PostProcTestCase": [[7, 3, 1, "", "setUp"], [7, 3, 1, "", "tearDown"], [7, 3, 1, "", "test_identity"]], "postproc.views": [[7, 1, 1, "", "PostProcView"]], "postproc.views.PostProcView": [[7, 3, 1, "", "identity"], [7, 3, 1, "", "post"], [7, 3, 1, "", "text"]], "store": [[8, 0, 0, "-", "models"], [8, 0, 0, "-", "tests"], [8, 0, 0, "-", "utils"], [8, 0, 0, "-", "views"]], "store.models": [[8, 1, 1, "", "Vote"]], "store.models.Vote": [[8, 6, 1, "", "DoesNotExist"], [8, 6, 1, "", "MultipleObjectsReturned"], [8, 2, 1, "", "a"], [8, 2, 1, "", "b"], [8, 3, 1, "", "get_next_by_voted"], [8, 3, 1, "", "get_previous_by_voted"], [8, 2, 1, "", "id"], [8, 2, 1, "", "objects"], [8, 2, 1, "", "voted"], [8, 2, 1, "", "voter_id"], [8, 2, 1, "", "voting_id"]], "store.tests": [[8, 1, 1, "", "StoreChoiceCase"], [8, 1, 1, "", "StoreTextCase"], [8, 1, 1, "", "StoreYesNoCase"]], "store.tests.StoreChoiceCase": [[8, 3, 1, "", "gen_votes"], [8, 3, 1, "", "gen_voting"], [8, 3, 1, "", "get_or_create_user"], [8, 3, 1, "", "setUp"], [8, 3, 1, "", "tearDown"], [8, 3, 1, "", "test_filter"], [8, 3, 1, "", "test_gen_vote_invalid"], [8, 3, 1, "", "test_hasvote"], [8, 3, 1, "", "test_store_vote"], [8, 3, 1, "", "test_store_vote_choices"], [8, 3, 1, "", "test_store_vote_text"], [8, 3, 1, "", "test_vote"], [8, 3, 1, "", "test_voting_invalid_type"], [8, 3, 1, "", "test_voting_status"]], "store.tests.StoreTextCase": [[8, 3, 1, "", "get_or_create_user"], [8, 3, 1, "", "setUp"], [8, 3, 1, "", "tearDown"], [8, 3, 1, "", "test_store_vote_text"]], "store.tests.StoreYesNoCase": [[8, 3, 1, "", "get_or_create_user"], [8, 3, 1, "", "setUp"], [8, 3, 1, "", "tearDown"], [8, 3, 1, "", "test_store_vote_yesno"]], "store.utils": [[8, 5, 1, "", "choices_store"], [8, 5, 1, "", "classic_store"]], "store.views": [[8, 1, 1, "", "StoreView"]], "store.views.StoreView": [[8, 2, 1, "", "filter_backends"], [8, 2, 1, "", "filterset_fields"], [8, 3, 1, "", "get"], [8, 3, 1, "", "post"], [8, 2, 1, "", "queryset"], [8, 2, 1, "", "serializer_class"]], "visualizer": [[9, 0, 0, "-", "test_selenium"], [9, 0, 0, "-", "views"]], "visualizer.test_selenium": [[9, 1, 1, "", "VisualizerTestCase"]], "visualizer.test_selenium.VisualizerTestCase": [[9, 3, 1, "", "create_classic_voting"], [9, 3, 1, "", "create_comment_voting_started"], [9, 3, 1, "", "create_multiple_choice_voting_started"], [9, 3, 1, "", "create_yesno_voting_started"], [9, 3, 1, "", "setUp"], [9, 3, 1, "", "tearDown"], [9, 3, 1, "", "test_visualizer_census_change"], [9, 3, 1, "", "test_visualizer_classic_finished"], [9, 3, 1, "", "test_visualizer_comment_finished"], [9, 3, 1, "", "test_visualizer_multiple_choice_finished"], [9, 3, 1, "", "test_visualizer_not_started"], [9, 3, 1, "", "test_visualizer_started_classic_with_census"], [9, 3, 1, "", "test_visualizer_started_comment_with_census"], [9, 3, 1, "", "test_visualizer_started_multiple_choice_with_census"], [9, 3, 1, "", "test_visualizer_started_no_census"], [9, 3, 1, "", "test_visualizer_started_yesno_with_census"], [9, 3, 1, "", "test_visualizer_yesno_finished"]], "visualizer.views": [[9, 1, 1, "", "VisualizerView"]], "visualizer.views.VisualizerView": [[9, 3, 1, "", "get_context_data"], [9, 2, 1, "", "template_name"]], "voting": [[10, 0, 0, "-", "admin"], [10, 0, 0, "-", "filters"], [10, 0, 0, "-", "models"], [10, 0, 0, "-", "serializers"], [10, 0, 0, "-", "tests"], [10, 0, 0, "-", "views"]], "voting.admin": [[10, 1, 1, "", "QuestionAdmin"], [10, 1, 1, "", "QuestionOptionYesNoAdmin"], [10, 1, 1, "", "VotingAdmin"], [10, 5, 1, "", "start"], [10, 5, 1, "", "stop"], [10, 5, 1, "", "tally"]], "voting.admin.QuestionAdmin": [[10, 2, 1, "", "list_display"], [10, 4, 1, "", "media"]], "voting.admin.QuestionOptionYesNoAdmin": [[10, 2, 1, "", "list_display"], [10, 4, 1, "", "media"]], "voting.admin.VotingAdmin": [[10, 2, 1, "", "actions"], [10, 2, 1, "", "date_hierarchy"], [10, 2, 1, "", "list_display"], [10, 2, 1, "", "list_filter"], [10, 4, 1, "", "media"], [10, 2, 1, "", "readonly_fields"], [10, 2, 1, "", "search_fields"]], "voting.filters": [[10, 1, 1, "", "StartedFilter"]], "voting.filters.StartedFilter": [[10, 3, 1, "", "lookups"], [10, 2, 1, "", "parameter_name"], [10, 3, 1, "", "queryset"], [10, 2, 1, "", "title"]], "voting.models": [[10, 1, 1, "", "Question"], [10, 1, 1, "", "QuestionOption"], [10, 1, 1, "", "QuestionOptionYesNo"], [10, 1, 1, "", "Voting"]], "voting.models.Question": [[10, 6, 1, "", "DoesNotExist"], [10, 6, 1, "", "MultipleObjectsReturned"], [10, 2, 1, "", "TYPES"], [10, 2, 1, "", "desc"], [10, 3, 1, "", "get_type_display"], [10, 2, 1, "", "id"], [10, 2, 1, "", "objects"], [10, 2, 1, "", "options"], [10, 3, 1, "", "save"], [10, 2, 1, "", "type"], [10, 2, 1, "", "voting"], [10, 2, 1, "", "yesno_options"]], "voting.models.QuestionOption": [[10, 6, 1, "", "DoesNotExist"], [10, 6, 1, "", "MultipleObjectsReturned"], [10, 2, 1, "", "id"], [10, 2, 1, "", "number"], [10, 2, 1, "", "objects"], [10, 2, 1, "", "option"], [10, 2, 1, "", "question"], [10, 2, 1, "", "question_id"], [10, 3, 1, "", "save"]], "voting.models.QuestionOptionYesNo": [[10, 6, 1, "", "DoesNotExist"], [10, 6, 1, "", "MultipleObjectsReturned"], [10, 2, 1, "", "id"], [10, 2, 1, "", "number"], [10, 2, 1, "", "objects"], [10, 2, 1, "", "option"], [10, 2, 1, "", "question"], [10, 2, 1, "", "question_id"], [10, 3, 1, "", "save"]], "voting.models.Voting": [[10, 6, 1, "", "DoesNotExist"], [10, 6, 1, "", "MultipleObjectsReturned"], [10, 2, 1, "", "auths"], [10, 3, 1, "", "create_pubkey"], [10, 2, 1, "", "desc"], [10, 3, 1, "", "do_postproc"], [10, 2, 1, "", "end_date"], [10, 3, 1, "", "get_votes"], [10, 2, 1, "", "id"], [10, 2, 1, "", "name"], [10, 2, 1, "", "objects"], [10, 2, 1, "", "postproc"], [10, 2, 1, "", "pub_key"], [10, 2, 1, "", "pub_key_id"], [10, 2, 1, "", "question"], [10, 2, 1, "", "question_id"], [10, 2, 1, "", "start_date"], [10, 2, 1, "", "tally"], [10, 3, 1, "", "tally_votes"]], "voting.serializers": [[10, 1, 1, "", "QuestionOptionSerializer"], [10, 1, 1, "", "QuestionOptionYesNoSerializer"], [10, 1, 1, "", "QuestionSerializer"], [10, 1, 1, "", "SimpleVotingSerializer"], [10, 1, 1, "", "VotingSerializer"]], "voting.serializers.QuestionOptionSerializer": [[10, 1, 1, "", "Meta"]], "voting.serializers.QuestionOptionSerializer.Meta": [[10, 2, 1, "", "fields"], [10, 2, 1, "", "model"]], "voting.serializers.QuestionOptionYesNoSerializer": [[10, 1, 1, "", "Meta"]], "voting.serializers.QuestionOptionYesNoSerializer.Meta": [[10, 2, 1, "", "fields"], [10, 2, 1, "", "model"]], "voting.serializers.QuestionSerializer": [[10, 1, 1, "", "Meta"], [10, 3, 1, "", "get_options"]], "voting.serializers.QuestionSerializer.Meta": [[10, 2, 1, "", "fields"], [10, 2, 1, "", "model"]], "voting.serializers.SimpleVotingSerializer": [[10, 1, 1, "", "Meta"]], "voting.serializers.SimpleVotingSerializer.Meta": [[10, 2, 1, "", "fields"], [10, 2, 1, "", "model"]], "voting.serializers.VotingSerializer": [[10, 1, 1, "", "Meta"]], "voting.serializers.VotingSerializer.Meta": [[10, 2, 1, "", "fields"], [10, 2, 1, "", "model"]], "voting.tests": [[10, 1, 1, "", "LogInErrorTests"], [10, 1, 1, "", "LogInSuccessTests"], [10, 1, 1, "", "QuestionTestCases"], [10, 1, 1, "", "QuestionsTests"], [10, 1, 1, "", "VotingTestCase"]], "voting.tests.LogInErrorTests": [[10, 3, 1, "", "passwordWrongLogIn"], [10, 3, 1, "", "setUp"], [10, 3, 1, "", "tearDown"], [10, 3, 1, "", "usernameWrongLogIn"]], "voting.tests.LogInSuccessTests": [[10, 3, 1, "", "setUp"], [10, 3, 1, "", "successLogIn"], [10, 3, 1, "", "tearDown"]], "voting.tests.QuestionTestCases": [[10, 3, 1, "", "setUp"], [10, 3, 1, "", "tearDown"], [10, 3, 1, "", "test_question"], [10, 3, 1, "", "test_question_option"], [10, 3, 1, "", "test_question_option_comment_error_str"], [10, 3, 1, "", "test_question_option_error"], [10, 3, 1, "", "test_question_option_error_str"], [10, 3, 1, "", "test_question_option_to_string"], [10, 3, 1, "", "test_question_option_yesno"], [10, 3, 1, "", "test_question_option_yesno_error"], [10, 3, 1, "", "test_question_option_yesno_error_str"], [10, 3, 1, "", "test_question_option_yesno_to_string"], [10, 3, 1, "", "test_question_to_string"]], "voting.tests.QuestionsTests": [[10, 3, 1, "", "createCensusEmptyError"], [10, 3, 1, "", "createClassicQuestionSuccess"], [10, 3, 1, "", "setUp"], [10, 3, 1, "", "tearDown"]], "voting.tests.VotingTestCase": [[10, 3, 1, "", "create_classic_voting"], [10, 3, 1, "", "create_comment_voting"], [10, 3, 1, "", "create_multiple_choice_voting"], [10, 3, 1, "", "create_voters"], [10, 3, 1, "", "create_yesno_voting"], [10, 3, 1, "", "encrypt_msg"], [10, 3, 1, "", "get_or_create_user"], [10, 3, 1, "", "setUp"], [10, 3, 1, "", "store_classic_votes"], [10, 3, 1, "", "store_multiple_choice_votes"], [10, 3, 1, "", "store_yesno_votes"], [10, 3, 1, "", "tearDown"], [10, 3, 1, "", "test_complete_comment_voting"], [10, 3, 1, "", "test_complete_multiple_choice_voting"], [10, 3, 1, "", "test_complete_voting"], [10, 3, 1, "", "test_complete_yesno_voting"], [10, 3, 1, "", "test_create_multiple_choice_voting_from_api"], [10, 3, 1, "", "test_create_voting_from_api"], [10, 3, 1, "", "test_create_voting_from_api_comment"], [10, 3, 1, "", "test_update_voting"]], "voting.views": [[10, 1, 1, "", "VotingUpdate"], [10, 1, 1, "", "VotingView"]], "voting.views.VotingUpdate": [[10, 2, 1, "", "filter_backends"], [10, 2, 1, "", "permission_classes"], [10, 3, 1, "", "put"], [10, 2, 1, "", "queryset"], [10, 2, 1, "", "serializer_class"]], "voting.views.VotingView": [[10, 2, 1, "", "filter_backends"], [10, 2, 1, "", "filterset_fields"], [10, 3, 1, "", "get"], [10, 3, 1, "", "post"], [10, 2, 1, "", "queryset"], [10, 2, 1, "", "serializer_class"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:method", "4": "py:property", "5": "py:function", "6": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "method", "Python method"], "4": ["py", "property", "Python property"], "5": ["py", "function", "Python function"], "6": ["py", "exception", "Python exception"]}, "titleterms": {"welcom": 0, "decid": [0, 5], "": 0, "document": 0, "subsystem": 0, "app": 0, "base": 0, "project": 0, "content": 0, "meme": 1, "collect": 1, "auth": 2, "modul": [2, 3, 4, 5, 6, 7, 8, 9, 10], "view": [2, 3, 4, 6, 7, 8, 9, 10], "py": [2, 3, 4, 6, 7, 8, 9, 10], "serial": [2, 10], "test_selenium": [2, 3, 9], "test": [2, 3, 4, 6, 7, 8, 10], "booth": 3, "censu": 4, "admin": [4, 10], "model": [4, 6, 8, 10], "form": [4, 10], "mixnet": 6, "mixcrypt": 6, "postproc": 7, "store": 8, "util": [8, 10], "visual": 9, "vote": 10, "filter": 10, "signal": 10, "task": 10, "tests_selenium": 10, "test_configurator_selenium": 10}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"Welcome to decide\u2019s documentation!": [[0, "welcome-to-decide-s-documentation"]], "Subsystems, apps and base project": [[0, "subsystems-apps-and-base-project"]], "Contents:": [[0, null]], "Memes collection": [[1, "memes-collection"]], "Auth Module": [[2, "auth-module"]], "views.py": [[2, "module-authentication.views"], [3, "module-booth.views"], [4, "module-census.views"], [6, "module-mixnet.views"], [7, "module-postproc.views"], [8, "module-store.views"], [9, "module-visualizer.views"], [10, "module-voting.views"]], "serializers.py": [[2, "module-authentication.serializers"], [10, "module-voting.serializers"]], "test_selenium.py": [[2, "test-selenium-py"], [3, "module-booth.test_selenium"], [9, "module-visualizer.test_selenium"]], "tests.py": [[2, "module-authentication.tests"], [3, "module-booth.tests"], [4, "module-census.tests"], [6, "module-mixnet.tests"], [7, "module-postproc.tests"], [8, "module-store.tests"], [10, "module-voting.tests"]], "Booth Module": [[3, "booth-module"]], "Census Module": [[4, "census-module"]], "admin.py": [[4, "module-census.admin"], [10, "module-voting.admin"]], "models.py": [[4, "module-census.models"], [6, "module-mixnet.models"], [8, "module-store.models"], [10, "module-voting.models"]], "forms.py": [[4, "forms-py"], [10, "forms-py"]], "Decide modules": [[5, "decide-modules"]], "Mixnet Module": [[6, "mixnet-module"]], "mixcrypt.py": [[6, "module-mixnet.mixcrypt"]], "Postproc Module": [[7, "postproc-module"]], "Store Module": [[8, "store-module"]], "utils.py": [[8, "module-store.utils"], [10, "utils-py"]], "Visualizer Module": [[9, "visualizer-module"]], "Voting Module": [[10, "voting-module"]], "filters.py": [[10, "module-voting.filters"]], "signals.py": [[10, "signals-py"]], "tasks.py": [[10, "tasks-py"]], "tests_selenium.py": [[10, "tests-selenium-py"]], "test_configurator_selenium.py": [[10, "test-configurator-selenium-py"]]}, "indexentries": {"authtestcase (class in authentication.tests)": [[2, "authentication.tests.AuthTestCase"]], "customusercreationform (class in authentication.views)": [[2, "authentication.views.CustomUserCreationForm"]], "customusercreationform.meta (class in authentication.views)": [[2, "authentication.views.CustomUserCreationForm.Meta"]], "getuserview (class in authentication.views)": [[2, "authentication.views.GetUserView"]], "loginview (class in authentication.views)": [[2, "authentication.views.LoginView"]], "logoutview (class in authentication.views)": [[2, "authentication.views.LogoutView"]], "registerview (class in authentication.views)": [[2, "authentication.views.RegisterView"]], "registerviewapi (class in authentication.views)": [[2, "authentication.views.RegisterViewAPI"]], "testloginnegative (class in authentication.tests)": [[2, "authentication.tests.TestLoginNegative"]], "testloginpositive (class in authentication.tests)": [[2, "authentication.tests.TestLoginPositive"]], "testregisternegative (class in authentication.tests)": [[2, "authentication.tests.TestRegisterNegative"]], "testregisterpositive (class in authentication.tests)": [[2, "authentication.tests.TestRegisterPositive"]], "userserializer (class in authentication.serializers)": [[2, "authentication.serializers.UserSerializer"]], "userserializer.meta (class in authentication.serializers)": [[2, "authentication.serializers.UserSerializer.Meta"]], "authentication.serializers": [[2, "module-authentication.serializers"]], "authentication.tests": [[2, "module-authentication.tests"]], "authentication.views": [[2, "module-authentication.views"]], "base_fields (authentication.views.customusercreationform attribute)": [[2, "authentication.views.CustomUserCreationForm.base_fields"]], "clean_confirmation() (authentication.views.customusercreationform method)": [[2, "authentication.views.CustomUserCreationForm.clean_confirmation"]], "clean_password_common() (authentication.views.customusercreationform method)": [[2, "authentication.views.CustomUserCreationForm.clean_password_common"]], "clean_password_lenght() (authentication.views.customusercreationform method)": [[2, "authentication.views.CustomUserCreationForm.clean_password_lenght"]], "clean_password_numeric() (authentication.views.customusercreationform method)": [[2, "authentication.views.CustomUserCreationForm.clean_password_numeric"]], "clean_password_too_similar() (authentication.views.customusercreationform method)": [[2, "authentication.views.CustomUserCreationForm.clean_password_too_similar"]], "declared_fields (authentication.views.customusercreationform attribute)": [[2, "authentication.views.CustomUserCreationForm.declared_fields"]], "email_clean() (authentication.views.customusercreationform method)": [[2, "authentication.views.CustomUserCreationForm.email_clean"]], "fields (authentication.serializers.userserializer.meta attribute)": [[2, "authentication.serializers.UserSerializer.Meta.fields"]], "fields (authentication.views.customusercreationform.meta attribute)": [[2, "authentication.views.CustomUserCreationForm.Meta.fields"]], "form_class (authentication.views.loginview attribute)": [[2, "authentication.views.LoginView.form_class"]], "form_class (authentication.views.registerview attribute)": [[2, "authentication.views.RegisterView.form_class"]], "get_form() (authentication.views.registerview method)": [[2, "authentication.views.RegisterView.get_form"]], "labels (authentication.views.customusercreationform.meta attribute)": [[2, "authentication.views.CustomUserCreationForm.Meta.labels"]], "logout_view() (in module authentication.views)": [[2, "authentication.views.logout_view"]], "main() (in module authentication.views)": [[2, "authentication.views.main"]], "media (authentication.views.customusercreationform property)": [[2, "authentication.views.CustomUserCreationForm.media"]], "model (authentication.serializers.userserializer.meta attribute)": [[2, "authentication.serializers.UserSerializer.Meta.model"]], "model (authentication.views.customusercreationform.meta attribute)": [[2, "authentication.views.CustomUserCreationForm.Meta.model"]], "model (authentication.views.loginview attribute)": [[2, "authentication.views.LoginView.model"]], "model (authentication.views.registerview attribute)": [[2, "authentication.views.RegisterView.model"]], "module": [[2, "module-authentication.serializers"], [2, "module-authentication.tests"], [2, "module-authentication.views"], [3, "module-booth.test_selenium"], [3, "module-booth.tests"], [3, "module-booth.views"], [4, "module-census.admin"], [4, "module-census.models"], [4, "module-census.tests"], [4, "module-census.views"], [6, "module-mixnet.mixcrypt"], [6, "module-mixnet.models"], [6, "module-mixnet.tests"], [6, "module-mixnet.views"], [7, "module-postproc.tests"], [7, "module-postproc.views"], [8, "module-store.models"], [8, "module-store.tests"], [8, "module-store.utils"], [8, "module-store.views"], [9, "module-visualizer.test_selenium"], [9, "module-visualizer.views"], [10, "module-voting.admin"], [10, "module-voting.filters"], [10, "module-voting.models"], [10, "module-voting.serializers"], [10, "module-voting.tests"], [10, "module-voting.views"]], "post() (authentication.views.getuserview method)": [[2, "authentication.views.GetUserView.post"]], "post() (authentication.views.loginview method)": [[2, "authentication.views.LoginView.post"]], "post() (authentication.views.logoutview method)": [[2, "authentication.views.LogoutView.post"]], "post() (authentication.views.registerview method)": [[2, "authentication.views.RegisterView.post"]], "post() (authentication.views.registerviewapi method)": [[2, "authentication.views.RegisterViewAPI.post"]], "setup() (authentication.tests.authtestcase method)": [[2, "authentication.tests.AuthTestCase.setUp"]], "setup() (authentication.tests.testloginnegative method)": [[2, "authentication.tests.TestLoginNegative.setUp"]], "setup() (authentication.tests.testloginpositive method)": [[2, "authentication.tests.TestLoginPositive.setUp"]], "setup() (authentication.tests.testregisternegative method)": [[2, "authentication.tests.TestRegisterNegative.setUp"]], "setup() (authentication.tests.testregisterpositive method)": [[2, "authentication.tests.TestRegisterPositive.setUp"]], "teardown() (authentication.tests.authtestcase method)": [[2, "authentication.tests.AuthTestCase.tearDown"]], "teardown() (authentication.tests.testloginnegative method)": [[2, "authentication.tests.TestLoginNegative.tearDown"]], "teardown() (authentication.tests.testloginpositive method)": [[2, "authentication.tests.TestLoginPositive.tearDown"]], "teardown() (authentication.tests.testregisternegative method)": [[2, "authentication.tests.TestRegisterNegative.tearDown"]], "teardown() (authentication.tests.testregisterpositive method)": [[2, "authentication.tests.TestRegisterPositive.tearDown"]], "template_name (authentication.views.loginview attribute)": [[2, "authentication.views.LoginView.template_name"]], "template_name (authentication.views.registerview attribute)": [[2, "authentication.views.RegisterView.template_name"]], "test_getuser() (authentication.tests.authtestcase method)": [[2, "authentication.tests.AuthTestCase.test_getuser"]], "test_getuser_invalid_token() (authentication.tests.authtestcase method)": [[2, "authentication.tests.AuthTestCase.test_getuser_invalid_token"]], "test_getuser_invented_token() (authentication.tests.authtestcase method)": [[2, "authentication.tests.AuthTestCase.test_getuser_invented_token"]], "test_login() (authentication.tests.authtestcase method)": [[2, "authentication.tests.AuthTestCase.test_login"]], "test_login_fail() (authentication.tests.authtestcase method)": [[2, "authentication.tests.AuthTestCase.test_login_fail"]], "test_logout() (authentication.tests.authtestcase method)": [[2, "authentication.tests.AuthTestCase.test_logout"]], "test_register() (authentication.tests.authtestcase method)": [[2, "authentication.tests.AuthTestCase.test_register"]], "test_register_bad_permissions() (authentication.tests.authtestcase method)": [[2, "authentication.tests.AuthTestCase.test_register_bad_permissions"]], "test_register_bad_request() (authentication.tests.authtestcase method)": [[2, "authentication.tests.AuthTestCase.test_register_bad_request"]], "test_register_user_already_exist() (authentication.tests.authtestcase method)": [[2, "authentication.tests.AuthTestCase.test_register_user_already_exist"]], "testloginnegative() (authentication.tests.testloginnegative method)": [[2, "authentication.tests.TestLoginNegative.testloginnegative"]], "testloginpositive() (authentication.tests.testloginpositive method)": [[2, "authentication.tests.TestLoginPositive.testloginpositive"]], "testregisternegativecommonpass() (authentication.tests.testregisternegative method)": [[2, "authentication.tests.TestRegisterNegative.testregisternegativecommonpass"]], "testregisternegativeemail() (authentication.tests.testregisternegative method)": [[2, "authentication.tests.TestRegisterNegative.testregisternegativeemail"]], "testregisternegativelongusername() (authentication.tests.testregisternegative method)": [[2, "authentication.tests.TestRegisterNegative.testregisternegativelongusername"]], "testregisternegativenumericpass() (authentication.tests.testregisternegative method)": [[2, "authentication.tests.TestRegisterNegative.testregisternegativenumericpass"]], "testregisternegativepatternusername() (authentication.tests.testregisternegative method)": [[2, "authentication.tests.TestRegisterNegative.testregisternegativepatternusername"]], "testregisternegativesimilarpass() (authentication.tests.testregisternegative method)": [[2, "authentication.tests.TestRegisterNegative.testregisternegativesimilarpass"]], "testregisternegativeusername() (authentication.tests.testregisternegative method)": [[2, "authentication.tests.TestRegisterNegative.testregisternegativeusername"]], "testregisternegativewrongpassword() (authentication.tests.testregisternegative method)": [[2, "authentication.tests.TestRegisterNegative.testregisternegativewrongpassword"]], "testregisterpositive() (authentication.tests.testregisterpositive method)": [[2, "authentication.tests.TestRegisterPositive.testregisterpositive"]], "username_clean_exits() (authentication.views.customusercreationform method)": [[2, "authentication.views.CustomUserCreationForm.username_clean_exits"]], "username_clean_lenght() (authentication.views.customusercreationform method)": [[2, "authentication.views.CustomUserCreationForm.username_clean_lenght"]], "username_clean_pattern() (authentication.views.customusercreationform method)": [[2, "authentication.views.CustomUserCreationForm.username_clean_pattern"]], "boothtestcase (class in booth.tests)": [[3, "booth.tests.BoothTestCase"]], "boothview (class in booth.views)": [[3, "booth.views.BoothView"]], "commentboothtestcase (class in booth.test_selenium)": [[3, "booth.test_selenium.CommentBoothTestCase"]], "multiplechoicequestionboothtest (class in booth.test_selenium)": [[3, "booth.test_selenium.MultipleChoiceQuestionBoothTest"]], "yesnoboothtestcase (class in booth.test_selenium)": [[3, "booth.test_selenium.YesNoBoothTestCase"]], "booth.test_selenium": [[3, "module-booth.test_selenium"]], "booth.tests": [[3, "module-booth.tests"]], "booth.views": [[3, "module-booth.views"]], "create_voting() (booth.test_selenium.commentboothtestcase method)": [[3, "booth.test_selenium.CommentBoothTestCase.create_voting"]], "create_voting() (booth.test_selenium.multiplechoicequestionboothtest method)": [[3, "booth.test_selenium.MultipleChoiceQuestionBoothTest.create_voting"]], "create_voting() (booth.test_selenium.yesnoboothtestcase method)": [[3, "booth.test_selenium.YesNoBoothTestCase.create_voting"]], "get_context_data() (booth.views.boothview method)": [[3, "booth.views.BoothView.get_context_data"]], "get_or_create_user() (booth.test_selenium.commentboothtestcase method)": [[3, "booth.test_selenium.CommentBoothTestCase.get_or_create_user"]], "get_or_create_user() (booth.test_selenium.multiplechoicequestionboothtest method)": [[3, "booth.test_selenium.MultipleChoiceQuestionBoothTest.get_or_create_user"]], "get_or_create_user() (booth.test_selenium.yesnoboothtestcase method)": [[3, "booth.test_selenium.YesNoBoothTestCase.get_or_create_user"]], "setup() (booth.test_selenium.commentboothtestcase method)": [[3, "booth.test_selenium.CommentBoothTestCase.setUp"]], "setup() (booth.test_selenium.multiplechoicequestionboothtest method)": [[3, "booth.test_selenium.MultipleChoiceQuestionBoothTest.setUp"]], "setup() (booth.test_selenium.yesnoboothtestcase method)": [[3, "booth.test_selenium.YesNoBoothTestCase.setUp"]], "setup() (booth.tests.boothtestcase method)": [[3, "booth.tests.BoothTestCase.setUp"]], "teardown() (booth.test_selenium.commentboothtestcase method)": [[3, "booth.test_selenium.CommentBoothTestCase.tearDown"]], "teardown() (booth.test_selenium.multiplechoicequestionboothtest method)": [[3, "booth.test_selenium.MultipleChoiceQuestionBoothTest.tearDown"]], "teardown() (booth.test_selenium.yesnoboothtestcase method)": [[3, "booth.test_selenium.YesNoBoothTestCase.tearDown"]], "teardown() (booth.tests.boothtestcase method)": [[3, "booth.tests.BoothTestCase.tearDown"]], "template_name (booth.views.boothview attribute)": [[3, "booth.views.BoothView.template_name"]], "testboothnotfound() (booth.tests.boothtestcase method)": [[3, "booth.tests.BoothTestCase.testBoothNotFound"]], "testboothredirection() (booth.tests.boothtestcase method)": [[3, "booth.tests.BoothTestCase.testBoothRedirection"]], "test_commentquestion() (booth.test_selenium.commentboothtestcase method)": [[3, "booth.test_selenium.CommentBoothTestCase.test_commentquestion"]], "test_testquestionmultipleoptions() (booth.test_selenium.multiplechoicequestionboothtest method)": [[3, "booth.test_selenium.MultipleChoiceQuestionBoothTest.test_testquestionmultipleoptions"]], "test_testquestionyesno() (booth.test_selenium.yesnoboothtestcase method)": [[3, "booth.test_selenium.YesNoBoothTestCase.test_testquestionyesno"]], "census (class in census.models)": [[4, "census.models.Census"]], "census.doesnotexist": [[4, "census.models.Census.DoesNotExist"]], "census.multipleobjectsreturned": [[4, "census.models.Census.MultipleObjectsReturned"]], "censusadmin (class in census.admin)": [[4, "census.admin.CensusAdmin"]], "censuscreate (class in census.views)": [[4, "census.views.CensusCreate"]], "censusdetail (class in census.views)": [[4, "census.views.CensusDetail"]], "censusexportview (class in census.views)": [[4, "census.views.CensusExportView"]], "censusexportviewtest (class in census.tests)": [[4, "census.tests.CensusExportViewTest"]], "censusimportview (class in census.views)": [[4, "census.views.CensusImportView"]], "censusimportviewtest (class in census.tests)": [[4, "census.tests.CensusImportViewTest"]], "censustest (class in census.tests)": [[4, "census.tests.CensusTest"]], "censustestcase (class in census.tests)": [[4, "census.tests.CensusTestCase"]], "exportcensustest (class in census.tests)": [[4, "census.tests.ExportCensusTest"]], "census.admin": [[4, "module-census.admin"]], "census.models": [[4, "module-census.models"]], "census.tests": [[4, "module-census.tests"]], "census.views": [[4, "module-census.views"]], "create() (census.views.censuscreate method)": [[4, "census.views.CensusCreate.create"]], "createcensusemptyerror() (census.tests.censustest method)": [[4, "census.tests.CensusTest.createCensusEmptyError"]], "createcensussuccess() (census.tests.censustest method)": [[4, "census.tests.CensusTest.createCensusSuccess"]], "createcensusvalueerror() (census.tests.censustest method)": [[4, "census.tests.CensusTest.createCensusValueError"]], "create_voters() (census.tests.exportcensustest method)": [[4, "census.tests.ExportCensusTest.create_voters"]], "create_voting() (census.tests.censusexportviewtest method)": [[4, "census.tests.CensusExportViewTest.create_voting"]], "create_voting() (census.tests.censusimportviewtest method)": [[4, "census.tests.CensusImportViewTest.create_voting"]], "create_voting() (census.tests.exportcensustest method)": [[4, "census.tests.ExportCensusTest.create_voting"]], "destroy() (census.views.censusdetail method)": [[4, "census.views.CensusDetail.destroy"]], "export_census() (in module census.views)": [[4, "census.views.export_census"]], "get_context_data() (census.views.censusexportview method)": [[4, "census.views.CensusExportView.get_context_data"]], "id (census.models.census attribute)": [[4, "census.models.Census.id"]], "list() (census.views.censuscreate method)": [[4, "census.views.CensusCreate.list"]], "list_display (census.admin.censusadmin attribute)": [[4, "census.admin.CensusAdmin.list_display"]], "list_filter (census.admin.censusadmin attribute)": [[4, "census.admin.CensusAdmin.list_filter"]], "media (census.admin.censusadmin property)": [[4, "census.admin.CensusAdmin.media"]], "objects (census.models.census attribute)": [[4, "census.models.Census.objects"]], "permission_classes (census.views.censuscreate attribute)": [[4, "census.views.CensusCreate.permission_classes"]], "post() (census.views.censusimportview method)": [[4, "census.views.CensusImportView.post"]], "retrieve() (census.views.censusdetail method)": [[4, "census.views.CensusDetail.retrieve"]], "search_fields (census.admin.censusadmin attribute)": [[4, "census.admin.CensusAdmin.search_fields"]], "setup() (census.tests.censusexportviewtest method)": [[4, "census.tests.CensusExportViewTest.setUp"]], "setup() (census.tests.censusimportviewtest method)": [[4, "census.tests.CensusImportViewTest.setUp"]], "setup() (census.tests.censustest method)": [[4, "census.tests.CensusTest.setUp"]], "setup() (census.tests.censustestcase method)": [[4, "census.tests.CensusTestCase.setUp"]], "setup() (census.tests.exportcensustest method)": [[4, "census.tests.ExportCensusTest.setUp"]], "teardown() (census.tests.censustest method)": [[4, "census.tests.CensusTest.tearDown"]], "teardown() (census.tests.censustestcase method)": [[4, "census.tests.CensusTestCase.tearDown"]], "template_name (census.views.censusexportview attribute)": [[4, "census.views.CensusExportView.template_name"]], "template_name (census.views.censusimportview attribute)": [[4, "census.views.CensusImportView.template_name"]], "test_add_new_voters() (census.tests.censustestcase method)": [[4, "census.tests.CensusTestCase.test_add_new_voters"]], "test_add_new_voters_conflict() (census.tests.censustestcase method)": [[4, "census.tests.CensusTestCase.test_add_new_voters_conflict"]], "test_census_export_view() (census.tests.censusexportviewtest method)": [[4, "census.tests.CensusExportViewTest.test_census_export_view"]], "test_census_import_view() (census.tests.censusimportviewtest method)": [[4, "census.tests.CensusImportViewTest.test_census_import_view"]], "test_check_vote_permissions() (census.tests.censustestcase method)": [[4, "census.tests.CensusTestCase.test_check_vote_permissions"]], "test_destroy_voter() (census.tests.censustestcase method)": [[4, "census.tests.CensusTestCase.test_destroy_voter"]], "test_export_census() (census.tests.exportcensustest method)": [[4, "census.tests.ExportCensusTest.test_export_census"]], "test_list_voting() (census.tests.censustestcase method)": [[4, "census.tests.CensusTestCase.test_list_voting"]], "voter_id (census.models.census attribute)": [[4, "census.models.Census.voter_id"]], "voting_id (census.models.census attribute)": [[4, "census.models.Census.voting_id"]], "decrypt (class in mixnet.views)": [[6, "mixnet.views.Decrypt"]], "mixcrypt (class in mixnet.mixcrypt)": [[6, "mixnet.mixcrypt.MixCrypt"]], "mixnet (class in mixnet.models)": [[6, "mixnet.models.Mixnet"]], "mixnet.doesnotexist": [[6, "mixnet.models.Mixnet.DoesNotExist"]], "mixnet.multipleobjectsreturned": [[6, "mixnet.models.Mixnet.MultipleObjectsReturned"]], "mixnetcase (class in mixnet.tests)": [[6, "mixnet.tests.MixnetCase"]], "mixnetviewset (class in mixnet.views)": [[6, "mixnet.views.MixnetViewSet"]], "shuffle (class in mixnet.views)": [[6, "mixnet.views.Shuffle"]], "__init__() (mixnet.mixcrypt.mixcrypt method)": [[6, "mixnet.mixcrypt.MixCrypt.__init__"]], "auth_position (mixnet.models.mixnet attribute)": [[6, "mixnet.models.Mixnet.auth_position"]], "auths (mixnet.models.mixnet attribute)": [[6, "mixnet.models.Mixnet.auths"]], "chain_call() (mixnet.models.mixnet method)": [[6, "mixnet.models.Mixnet.chain_call"]], "create() (mixnet.views.mixnetviewset method)": [[6, "mixnet.views.MixnetViewSet.create"]], "decrypt() (mixnet.mixcrypt.mixcrypt method)": [[6, "mixnet.mixcrypt.MixCrypt.decrypt"]], "decrypt() (mixnet.models.mixnet method)": [[6, "mixnet.models.Mixnet.decrypt"]], "encrypt() (mixnet.mixcrypt.mixcrypt method)": [[6, "mixnet.mixcrypt.MixCrypt.encrypt"]], "encrypt_msgs() (mixnet.tests.mixnetcase method)": [[6, "mixnet.tests.MixnetCase.encrypt_msgs"]], "gen_key() (mixnet.models.mixnet method)": [[6, "mixnet.models.Mixnet.gen_key"]], "gen_multiple_key() (in module mixnet.mixcrypt)": [[6, "mixnet.mixcrypt.gen_multiple_key"]], "gen_perm() (mixnet.mixcrypt.mixcrypt method)": [[6, "mixnet.mixcrypt.MixCrypt.gen_perm"]], "genk() (mixnet.mixcrypt.mixcrypt method)": [[6, "mixnet.mixcrypt.MixCrypt.genk"]], "getk() (mixnet.mixcrypt.mixcrypt method)": [[6, "mixnet.mixcrypt.MixCrypt.getk"]], "id (mixnet.models.mixnet attribute)": [[6, "mixnet.models.Mixnet.id"]], "key (mixnet.models.mixnet attribute)": [[6, "mixnet.models.Mixnet.key"]], "key_id (mixnet.models.mixnet attribute)": [[6, "mixnet.models.Mixnet.key_id"]], "mixnet.mixcrypt": [[6, "module-mixnet.mixcrypt"]], "mixnet.models": [[6, "module-mixnet.models"]], "mixnet.tests": [[6, "module-mixnet.tests"]], "mixnet.views": [[6, "module-mixnet.views"]], "multiple_decrypt() (in module mixnet.mixcrypt)": [[6, "mixnet.mixcrypt.multiple_decrypt"]], "multiple_decrypt() (mixnet.mixcrypt.mixcrypt method)": [[6, "mixnet.mixcrypt.MixCrypt.multiple_decrypt"]], "multiple_decrypt_shuffle() (in module mixnet.mixcrypt)": [[6, "mixnet.mixcrypt.multiple_decrypt_shuffle"]], "multiple_decrypt_shuffle2() (in module mixnet.mixcrypt)": [[6, "mixnet.mixcrypt.multiple_decrypt_shuffle2"]], "next_auths() (mixnet.models.mixnet method)": [[6, "mixnet.models.Mixnet.next_auths"]], "objects (mixnet.models.mixnet attribute)": [[6, "mixnet.models.Mixnet.objects"]], "post() (mixnet.views.decrypt method)": [[6, "mixnet.views.Decrypt.post"]], "post() (mixnet.views.shuffle method)": [[6, "mixnet.views.Shuffle.post"]], "pubkey (mixnet.models.mixnet attribute)": [[6, "mixnet.models.Mixnet.pubkey"]], "pubkey_id (mixnet.models.mixnet attribute)": [[6, "mixnet.models.Mixnet.pubkey_id"]], "queryset (mixnet.views.mixnetviewset attribute)": [[6, "mixnet.views.MixnetViewSet.queryset"]], "rand() (in module mixnet.mixcrypt)": [[6, "mixnet.mixcrypt.rand"]], "reencrypt() (mixnet.mixcrypt.mixcrypt method)": [[6, "mixnet.mixcrypt.MixCrypt.reencrypt"]], "serializer_class (mixnet.views.mixnetviewset attribute)": [[6, "mixnet.views.MixnetViewSet.serializer_class"]], "setup() (mixnet.tests.mixnetcase method)": [[6, "mixnet.tests.MixnetCase.setUp"]], "setk() (mixnet.mixcrypt.mixcrypt method)": [[6, "mixnet.mixcrypt.MixCrypt.setk"]], "shuffle() (mixnet.mixcrypt.mixcrypt method)": [[6, "mixnet.mixcrypt.MixCrypt.shuffle"]], "shuffle() (mixnet.models.mixnet method)": [[6, "mixnet.models.Mixnet.shuffle"]], "shuffle_decrypt() (mixnet.mixcrypt.mixcrypt method)": [[6, "mixnet.mixcrypt.MixCrypt.shuffle_decrypt"]], "tags (mixnet.tests.mixnetcase attribute)": [[6, "mixnet.tests.MixnetCase.tags"]], "teardown() (mixnet.tests.mixnetcase method)": [[6, "mixnet.tests.MixnetCase.tearDown"]], "test_create() (mixnet.tests.mixnetcase method)": [[6, "mixnet.tests.MixnetCase.test_create"]], "test_decrypt() (mixnet.tests.mixnetcase method)": [[6, "mixnet.tests.MixnetCase.test_decrypt"]], "test_multiple_auths() (mixnet.tests.mixnetcase method)": [[6, "mixnet.tests.MixnetCase.test_multiple_auths"]], "test_multiple_auths_mock() (mixnet.tests.mixnetcase method)": [[6, "mixnet.tests.MixnetCase.test_multiple_auths_mock"]], "test_shuffle() (mixnet.tests.mixnetcase method)": [[6, "mixnet.tests.MixnetCase.test_shuffle"]], "test_shuffle2() (mixnet.tests.mixnetcase method)": [[6, "mixnet.tests.MixnetCase.test_shuffle2"]], "voting_id (mixnet.models.mixnet attribute)": [[6, "mixnet.models.Mixnet.voting_id"]], "postproctestcase (class in postproc.tests)": [[7, "postproc.tests.PostProcTestCase"]], "postprocview (class in postproc.views)": [[7, "postproc.views.PostProcView"]], "identity() (postproc.views.postprocview method)": [[7, "postproc.views.PostProcView.identity"]], "post() (postproc.views.postprocview method)": [[7, "postproc.views.PostProcView.post"]], "postproc.tests": [[7, "module-postproc.tests"]], "postproc.views": [[7, "module-postproc.views"]], "setup() (postproc.tests.postproctestcase method)": [[7, "postproc.tests.PostProcTestCase.setUp"]], "teardown() (postproc.tests.postproctestcase method)": [[7, "postproc.tests.PostProcTestCase.tearDown"]], "test_identity() (postproc.tests.postproctestcase method)": [[7, "postproc.tests.PostProcTestCase.test_identity"]], "text() (postproc.views.postprocview method)": [[7, "postproc.views.PostProcView.text"]], "storechoicecase (class in store.tests)": [[8, "store.tests.StoreChoiceCase"]], "storetextcase (class in store.tests)": [[8, "store.tests.StoreTextCase"]], "storeview (class in store.views)": [[8, "store.views.StoreView"]], "storeyesnocase (class in store.tests)": [[8, "store.tests.StoreYesNoCase"]], "vote (class in store.models)": [[8, "store.models.Vote"]], "vote.doesnotexist": [[8, "store.models.Vote.DoesNotExist"]], "vote.multipleobjectsreturned": [[8, "store.models.Vote.MultipleObjectsReturned"]], "a (store.models.vote attribute)": [[8, "store.models.Vote.a"]], "b (store.models.vote attribute)": [[8, "store.models.Vote.b"]], "choices_store() (in module store.utils)": [[8, "store.utils.choices_store"]], "classic_store() (in module store.utils)": [[8, "store.utils.classic_store"]], "filter_backends (store.views.storeview attribute)": [[8, "store.views.StoreView.filter_backends"]], "filterset_fields (store.views.storeview attribute)": [[8, "store.views.StoreView.filterset_fields"]], "gen_votes() (store.tests.storechoicecase method)": [[8, "store.tests.StoreChoiceCase.gen_votes"]], "gen_voting() (store.tests.storechoicecase method)": [[8, "store.tests.StoreChoiceCase.gen_voting"]], "get() (store.views.storeview method)": [[8, "store.views.StoreView.get"]], "get_next_by_voted() (store.models.vote method)": [[8, "store.models.Vote.get_next_by_voted"]], "get_or_create_user() (store.tests.storechoicecase method)": [[8, "store.tests.StoreChoiceCase.get_or_create_user"]], "get_or_create_user() (store.tests.storetextcase method)": [[8, "store.tests.StoreTextCase.get_or_create_user"]], "get_or_create_user() (store.tests.storeyesnocase method)": [[8, "store.tests.StoreYesNoCase.get_or_create_user"]], "get_previous_by_voted() (store.models.vote method)": [[8, "store.models.Vote.get_previous_by_voted"]], "id (store.models.vote attribute)": [[8, "store.models.Vote.id"]], "objects (store.models.vote attribute)": [[8, "store.models.Vote.objects"]], "post() (store.views.storeview method)": [[8, "store.views.StoreView.post"]], "queryset (store.views.storeview attribute)": [[8, "store.views.StoreView.queryset"]], "serializer_class (store.views.storeview attribute)": [[8, "store.views.StoreView.serializer_class"]], "setup() (store.tests.storechoicecase method)": [[8, "store.tests.StoreChoiceCase.setUp"]], "setup() (store.tests.storetextcase method)": [[8, "store.tests.StoreTextCase.setUp"]], "setup() (store.tests.storeyesnocase method)": [[8, "store.tests.StoreYesNoCase.setUp"]], "store.models": [[8, "module-store.models"]], "store.tests": [[8, "module-store.tests"]], "store.utils": [[8, "module-store.utils"]], "store.views": [[8, "module-store.views"]], "teardown() (store.tests.storechoicecase method)": [[8, "store.tests.StoreChoiceCase.tearDown"]], "teardown() (store.tests.storetextcase method)": [[8, "store.tests.StoreTextCase.tearDown"]], "teardown() (store.tests.storeyesnocase method)": [[8, "store.tests.StoreYesNoCase.tearDown"]], "test_filter() (store.tests.storechoicecase method)": [[8, "store.tests.StoreChoiceCase.test_filter"]], "test_gen_vote_invalid() (store.tests.storechoicecase method)": [[8, "store.tests.StoreChoiceCase.test_gen_vote_invalid"]], "test_hasvote() (store.tests.storechoicecase method)": [[8, "store.tests.StoreChoiceCase.test_hasvote"]], "test_store_vote() (store.tests.storechoicecase method)": [[8, "store.tests.StoreChoiceCase.test_store_vote"]], "test_store_vote_choices() (store.tests.storechoicecase method)": [[8, "store.tests.StoreChoiceCase.test_store_vote_choices"]], "test_store_vote_text() (store.tests.storechoicecase method)": [[8, "store.tests.StoreChoiceCase.test_store_vote_text"]], "test_store_vote_text() (store.tests.storetextcase method)": [[8, "store.tests.StoreTextCase.test_store_vote_text"]], "test_store_vote_yesno() (store.tests.storeyesnocase method)": [[8, "store.tests.StoreYesNoCase.test_store_vote_yesno"]], "test_vote() (store.tests.storechoicecase method)": [[8, "store.tests.StoreChoiceCase.test_vote"]], "test_voting_invalid_type() (store.tests.storechoicecase method)": [[8, "store.tests.StoreChoiceCase.test_voting_invalid_type"]], "test_voting_status() (store.tests.storechoicecase method)": [[8, "store.tests.StoreChoiceCase.test_voting_status"]], "voted (store.models.vote attribute)": [[8, "store.models.Vote.voted"]], "voter_id (store.models.vote attribute)": [[8, "store.models.Vote.voter_id"]], "voting_id (store.models.vote attribute)": [[8, "store.models.Vote.voting_id"]], "visualizertestcase (class in visualizer.test_selenium)": [[9, "visualizer.test_selenium.VisualizerTestCase"]], "visualizerview (class in visualizer.views)": [[9, "visualizer.views.VisualizerView"]], "create_classic_voting() (visualizer.test_selenium.visualizertestcase method)": [[9, "visualizer.test_selenium.VisualizerTestCase.create_classic_voting"]], "create_comment_voting_started() (visualizer.test_selenium.visualizertestcase method)": [[9, "visualizer.test_selenium.VisualizerTestCase.create_comment_voting_started"]], "create_multiple_choice_voting_started() (visualizer.test_selenium.visualizertestcase method)": [[9, "visualizer.test_selenium.VisualizerTestCase.create_multiple_choice_voting_started"]], "create_yesno_voting_started() (visualizer.test_selenium.visualizertestcase method)": [[9, "visualizer.test_selenium.VisualizerTestCase.create_yesno_voting_started"]], "get_context_data() (visualizer.views.visualizerview method)": [[9, "visualizer.views.VisualizerView.get_context_data"]], "setup() (visualizer.test_selenium.visualizertestcase method)": [[9, "visualizer.test_selenium.VisualizerTestCase.setUp"]], "teardown() (visualizer.test_selenium.visualizertestcase method)": [[9, "visualizer.test_selenium.VisualizerTestCase.tearDown"]], "template_name (visualizer.views.visualizerview attribute)": [[9, "visualizer.views.VisualizerView.template_name"]], "test_visualizer_census_change() (visualizer.test_selenium.visualizertestcase method)": [[9, "visualizer.test_selenium.VisualizerTestCase.test_visualizer_census_change"]], "test_visualizer_classic_finished() (visualizer.test_selenium.visualizertestcase method)": [[9, "visualizer.test_selenium.VisualizerTestCase.test_visualizer_classic_finished"]], "test_visualizer_comment_finished() (visualizer.test_selenium.visualizertestcase method)": [[9, "visualizer.test_selenium.VisualizerTestCase.test_visualizer_comment_finished"]], "test_visualizer_multiple_choice_finished() (visualizer.test_selenium.visualizertestcase method)": [[9, "visualizer.test_selenium.VisualizerTestCase.test_visualizer_multiple_choice_finished"]], "test_visualizer_not_started() (visualizer.test_selenium.visualizertestcase method)": [[9, "visualizer.test_selenium.VisualizerTestCase.test_visualizer_not_started"]], "test_visualizer_started_classic_with_census() (visualizer.test_selenium.visualizertestcase method)": [[9, "visualizer.test_selenium.VisualizerTestCase.test_visualizer_started_classic_with_census"]], "test_visualizer_started_comment_with_census() (visualizer.test_selenium.visualizertestcase method)": [[9, "visualizer.test_selenium.VisualizerTestCase.test_visualizer_started_comment_with_census"]], "test_visualizer_started_multiple_choice_with_census() (visualizer.test_selenium.visualizertestcase method)": [[9, "visualizer.test_selenium.VisualizerTestCase.test_visualizer_started_multiple_choice_with_census"]], "test_visualizer_started_no_census() (visualizer.test_selenium.visualizertestcase method)": [[9, "visualizer.test_selenium.VisualizerTestCase.test_visualizer_started_no_census"]], "test_visualizer_started_yesno_with_census() (visualizer.test_selenium.visualizertestcase method)": [[9, "visualizer.test_selenium.VisualizerTestCase.test_visualizer_started_yesno_with_census"]], "test_visualizer_yesno_finished() (visualizer.test_selenium.visualizertestcase method)": [[9, "visualizer.test_selenium.VisualizerTestCase.test_visualizer_yesno_finished"]], "visualizer.test_selenium": [[9, "module-visualizer.test_selenium"]], "visualizer.views": [[9, "module-visualizer.views"]], "loginerrortests (class in voting.tests)": [[10, "voting.tests.LogInErrorTests"]], "loginsuccesstests (class in voting.tests)": [[10, "voting.tests.LogInSuccessTests"]], "question (class in voting.models)": [[10, "voting.models.Question"]], "question.doesnotexist": [[10, "voting.models.Question.DoesNotExist"]], "question.multipleobjectsreturned": [[10, "voting.models.Question.MultipleObjectsReturned"]], "questionadmin (class in voting.admin)": [[10, "voting.admin.QuestionAdmin"]], "questionoption (class in voting.models)": [[10, "voting.models.QuestionOption"]], "questionoption.doesnotexist": [[10, "voting.models.QuestionOption.DoesNotExist"]], "questionoption.multipleobjectsreturned": [[10, "voting.models.QuestionOption.MultipleObjectsReturned"]], "questionoptionserializer (class in voting.serializers)": [[10, "voting.serializers.QuestionOptionSerializer"]], "questionoptionserializer.meta (class in voting.serializers)": [[10, "voting.serializers.QuestionOptionSerializer.Meta"]], "questionoptionyesno (class in voting.models)": [[10, "voting.models.QuestionOptionYesNo"]], "questionoptionyesno.doesnotexist": [[10, "voting.models.QuestionOptionYesNo.DoesNotExist"]], "questionoptionyesno.multipleobjectsreturned": [[10, "voting.models.QuestionOptionYesNo.MultipleObjectsReturned"]], "questionoptionyesnoadmin (class in voting.admin)": [[10, "voting.admin.QuestionOptionYesNoAdmin"]], "questionoptionyesnoserializer (class in voting.serializers)": [[10, "voting.serializers.QuestionOptionYesNoSerializer"]], "questionoptionyesnoserializer.meta (class in voting.serializers)": [[10, "voting.serializers.QuestionOptionYesNoSerializer.Meta"]], "questionserializer (class in voting.serializers)": [[10, "voting.serializers.QuestionSerializer"]], "questionserializer.meta (class in voting.serializers)": [[10, "voting.serializers.QuestionSerializer.Meta"]], "questiontestcases (class in voting.tests)": [[10, "voting.tests.QuestionTestCases"]], "questionstests (class in voting.tests)": [[10, "voting.tests.QuestionsTests"]], "simplevotingserializer (class in voting.serializers)": [[10, "voting.serializers.SimpleVotingSerializer"]], "simplevotingserializer.meta (class in voting.serializers)": [[10, "voting.serializers.SimpleVotingSerializer.Meta"]], "startedfilter (class in voting.filters)": [[10, "voting.filters.StartedFilter"]], "types (voting.models.question attribute)": [[10, "voting.models.Question.TYPES"]], "voting (class in voting.models)": [[10, "voting.models.Voting"]], "voting.doesnotexist": [[10, "voting.models.Voting.DoesNotExist"]], "voting.multipleobjectsreturned": [[10, "voting.models.Voting.MultipleObjectsReturned"]], "votingadmin (class in voting.admin)": [[10, "voting.admin.VotingAdmin"]], "votingserializer (class in voting.serializers)": [[10, "voting.serializers.VotingSerializer"]], "votingserializer.meta (class in voting.serializers)": [[10, "voting.serializers.VotingSerializer.Meta"]], "votingtestcase (class in voting.tests)": [[10, "voting.tests.VotingTestCase"]], "votingupdate (class in voting.views)": [[10, "voting.views.VotingUpdate"]], "votingview (class in voting.views)": [[10, "voting.views.VotingView"]], "actions (voting.admin.votingadmin attribute)": [[10, "voting.admin.VotingAdmin.actions"]], "auths (voting.models.voting attribute)": [[10, "voting.models.Voting.auths"]], "createcensusemptyerror() (voting.tests.questionstests method)": [[10, "voting.tests.QuestionsTests.createCensusEmptyError"]], "createclassicquestionsuccess() (voting.tests.questionstests method)": [[10, "voting.tests.QuestionsTests.createClassicQuestionSuccess"]], "create_classic_voting() (voting.tests.votingtestcase method)": [[10, "voting.tests.VotingTestCase.create_classic_voting"]], "create_comment_voting() (voting.tests.votingtestcase method)": [[10, "voting.tests.VotingTestCase.create_comment_voting"]], "create_multiple_choice_voting() (voting.tests.votingtestcase method)": [[10, "voting.tests.VotingTestCase.create_multiple_choice_voting"]], "create_pubkey() (voting.models.voting method)": [[10, "voting.models.Voting.create_pubkey"]], "create_voters() (voting.tests.votingtestcase method)": [[10, "voting.tests.VotingTestCase.create_voters"]], "create_yesno_voting() (voting.tests.votingtestcase method)": [[10, "voting.tests.VotingTestCase.create_yesno_voting"]], "date_hierarchy (voting.admin.votingadmin attribute)": [[10, "voting.admin.VotingAdmin.date_hierarchy"]], "desc (voting.models.question attribute)": [[10, "voting.models.Question.desc"]], "desc (voting.models.voting attribute)": [[10, "voting.models.Voting.desc"]], "do_postproc() (voting.models.voting method)": [[10, "voting.models.Voting.do_postproc"]], "encrypt_msg() (voting.tests.votingtestcase method)": [[10, "voting.tests.VotingTestCase.encrypt_msg"]], "end_date (voting.models.voting attribute)": [[10, "voting.models.Voting.end_date"]], "fields (voting.serializers.questionoptionserializer.meta attribute)": [[10, "voting.serializers.QuestionOptionSerializer.Meta.fields"]], "fields (voting.serializers.questionoptionyesnoserializer.meta attribute)": [[10, "voting.serializers.QuestionOptionYesNoSerializer.Meta.fields"]], "fields (voting.serializers.questionserializer.meta attribute)": [[10, "voting.serializers.QuestionSerializer.Meta.fields"]], "fields (voting.serializers.simplevotingserializer.meta attribute)": [[10, "voting.serializers.SimpleVotingSerializer.Meta.fields"]], "fields (voting.serializers.votingserializer.meta attribute)": [[10, "voting.serializers.VotingSerializer.Meta.fields"]], "filter_backends (voting.views.votingupdate attribute)": [[10, "voting.views.VotingUpdate.filter_backends"]], "filter_backends (voting.views.votingview attribute)": [[10, "voting.views.VotingView.filter_backends"]], "filterset_fields (voting.views.votingview attribute)": [[10, "voting.views.VotingView.filterset_fields"]], "get() (voting.views.votingview method)": [[10, "voting.views.VotingView.get"]], "get_options() (voting.serializers.questionserializer method)": [[10, "voting.serializers.QuestionSerializer.get_options"]], "get_or_create_user() (voting.tests.votingtestcase method)": [[10, "voting.tests.VotingTestCase.get_or_create_user"]], "get_type_display() (voting.models.question method)": [[10, "voting.models.Question.get_type_display"]], "get_votes() (voting.models.voting method)": [[10, "voting.models.Voting.get_votes"]], "id (voting.models.question attribute)": [[10, "voting.models.Question.id"]], "id (voting.models.questionoption attribute)": [[10, "voting.models.QuestionOption.id"]], "id (voting.models.questionoptionyesno attribute)": [[10, "voting.models.QuestionOptionYesNo.id"]], "id (voting.models.voting attribute)": [[10, "voting.models.Voting.id"]], "list_display (voting.admin.questionadmin attribute)": [[10, "voting.admin.QuestionAdmin.list_display"]], "list_display (voting.admin.questionoptionyesnoadmin attribute)": [[10, "voting.admin.QuestionOptionYesNoAdmin.list_display"]], "list_display (voting.admin.votingadmin attribute)": [[10, "voting.admin.VotingAdmin.list_display"]], "list_filter (voting.admin.votingadmin attribute)": [[10, "voting.admin.VotingAdmin.list_filter"]], "lookups() (voting.filters.startedfilter method)": [[10, "voting.filters.StartedFilter.lookups"]], "media (voting.admin.questionadmin property)": [[10, "voting.admin.QuestionAdmin.media"]], "media (voting.admin.questionoptionyesnoadmin property)": [[10, "voting.admin.QuestionOptionYesNoAdmin.media"]], "media (voting.admin.votingadmin property)": [[10, "voting.admin.VotingAdmin.media"]], "model (voting.serializers.questionoptionserializer.meta attribute)": [[10, "voting.serializers.QuestionOptionSerializer.Meta.model"]], "model (voting.serializers.questionoptionyesnoserializer.meta attribute)": [[10, "voting.serializers.QuestionOptionYesNoSerializer.Meta.model"]], "model (voting.serializers.questionserializer.meta attribute)": [[10, "voting.serializers.QuestionSerializer.Meta.model"]], "model (voting.serializers.simplevotingserializer.meta attribute)": [[10, "voting.serializers.SimpleVotingSerializer.Meta.model"]], "model (voting.serializers.votingserializer.meta attribute)": [[10, "voting.serializers.VotingSerializer.Meta.model"]], "name (voting.models.voting attribute)": [[10, "voting.models.Voting.name"]], "number (voting.models.questionoption attribute)": [[10, "voting.models.QuestionOption.number"]], "number (voting.models.questionoptionyesno attribute)": [[10, "voting.models.QuestionOptionYesNo.number"]], "objects (voting.models.question attribute)": [[10, "voting.models.Question.objects"]], "objects (voting.models.questionoption attribute)": [[10, "voting.models.QuestionOption.objects"]], "objects (voting.models.questionoptionyesno attribute)": [[10, "voting.models.QuestionOptionYesNo.objects"]], "objects (voting.models.voting attribute)": [[10, "voting.models.Voting.objects"]], "option (voting.models.questionoption attribute)": [[10, "voting.models.QuestionOption.option"]], "option (voting.models.questionoptionyesno attribute)": [[10, "voting.models.QuestionOptionYesNo.option"]], "options (voting.models.question attribute)": [[10, "voting.models.Question.options"]], "parameter_name (voting.filters.startedfilter attribute)": [[10, "voting.filters.StartedFilter.parameter_name"]], "passwordwronglogin() (voting.tests.loginerrortests method)": [[10, "voting.tests.LogInErrorTests.passwordWrongLogIn"]], "permission_classes (voting.views.votingupdate attribute)": [[10, "voting.views.VotingUpdate.permission_classes"]], "post() (voting.views.votingview method)": [[10, "voting.views.VotingView.post"]], "postproc (voting.models.voting attribute)": [[10, "voting.models.Voting.postproc"]], "pub_key (voting.models.voting attribute)": [[10, "voting.models.Voting.pub_key"]], "pub_key_id (voting.models.voting attribute)": [[10, "voting.models.Voting.pub_key_id"]], "put() (voting.views.votingupdate method)": [[10, "voting.views.VotingUpdate.put"]], "queryset (voting.views.votingupdate attribute)": [[10, "voting.views.VotingUpdate.queryset"]], "queryset (voting.views.votingview attribute)": [[10, "voting.views.VotingView.queryset"]], "queryset() (voting.filters.startedfilter method)": [[10, "voting.filters.StartedFilter.queryset"]], "question (voting.models.questionoption attribute)": [[10, "voting.models.QuestionOption.question"]], "question (voting.models.questionoptionyesno attribute)": [[10, "voting.models.QuestionOptionYesNo.question"]], "question (voting.models.voting attribute)": [[10, "voting.models.Voting.question"]], "question_id (voting.models.questionoption attribute)": [[10, "voting.models.QuestionOption.question_id"]], "question_id (voting.models.questionoptionyesno attribute)": [[10, "voting.models.QuestionOptionYesNo.question_id"]], "question_id (voting.models.voting attribute)": [[10, "voting.models.Voting.question_id"]], "readonly_fields (voting.admin.votingadmin attribute)": [[10, "voting.admin.VotingAdmin.readonly_fields"]], "save() (voting.models.question method)": [[10, "voting.models.Question.save"]], "save() (voting.models.questionoption method)": [[10, "voting.models.QuestionOption.save"]], "save() (voting.models.questionoptionyesno method)": [[10, "voting.models.QuestionOptionYesNo.save"]], "search_fields (voting.admin.votingadmin attribute)": [[10, "voting.admin.VotingAdmin.search_fields"]], "serializer_class (voting.views.votingupdate attribute)": [[10, "voting.views.VotingUpdate.serializer_class"]], "serializer_class (voting.views.votingview attribute)": [[10, "voting.views.VotingView.serializer_class"]], "setup() (voting.tests.loginerrortests method)": [[10, "voting.tests.LogInErrorTests.setUp"]], "setup() (voting.tests.loginsuccesstests method)": [[10, "voting.tests.LogInSuccessTests.setUp"]], "setup() (voting.tests.questiontestcases method)": [[10, "voting.tests.QuestionTestCases.setUp"]], "setup() (voting.tests.questionstests method)": [[10, "voting.tests.QuestionsTests.setUp"]], "setup() (voting.tests.votingtestcase method)": [[10, "voting.tests.VotingTestCase.setUp"]], "start() (in module voting.admin)": [[10, "voting.admin.start"]], "start_date (voting.models.voting attribute)": [[10, "voting.models.Voting.start_date"]], "stop() (in module voting.admin)": [[10, "voting.admin.stop"]], "store_classic_votes() (voting.tests.votingtestcase method)": [[10, "voting.tests.VotingTestCase.store_classic_votes"]], "store_multiple_choice_votes() (voting.tests.votingtestcase method)": [[10, "voting.tests.VotingTestCase.store_multiple_choice_votes"]], "store_yesno_votes() (voting.tests.votingtestcase method)": [[10, "voting.tests.VotingTestCase.store_yesno_votes"]], "successlogin() (voting.tests.loginsuccesstests method)": [[10, "voting.tests.LogInSuccessTests.successLogIn"]], "tally (voting.models.voting attribute)": [[10, "voting.models.Voting.tally"]], "tally() (in module voting.admin)": [[10, "voting.admin.tally"]], "tally_votes() (voting.models.voting method)": [[10, "voting.models.Voting.tally_votes"]], "teardown() (voting.tests.loginerrortests method)": [[10, "voting.tests.LogInErrorTests.tearDown"]], "teardown() (voting.tests.loginsuccesstests method)": [[10, "voting.tests.LogInSuccessTests.tearDown"]], "teardown() (voting.tests.questiontestcases method)": [[10, "voting.tests.QuestionTestCases.tearDown"]], "teardown() (voting.tests.questionstests method)": [[10, "voting.tests.QuestionsTests.tearDown"]], "teardown() (voting.tests.votingtestcase method)": [[10, "voting.tests.VotingTestCase.tearDown"]], "test_complete_comment_voting() (voting.tests.votingtestcase method)": [[10, "voting.tests.VotingTestCase.test_complete_comment_voting"]], "test_complete_multiple_choice_voting() (voting.tests.votingtestcase method)": [[10, "voting.tests.VotingTestCase.test_complete_multiple_choice_voting"]], "test_complete_voting() (voting.tests.votingtestcase method)": [[10, "voting.tests.VotingTestCase.test_complete_voting"]], "test_complete_yesno_voting() (voting.tests.votingtestcase method)": [[10, "voting.tests.VotingTestCase.test_complete_yesno_voting"]], "test_create_multiple_choice_voting_from_api() (voting.tests.votingtestcase method)": [[10, "voting.tests.VotingTestCase.test_create_multiple_choice_voting_from_api"]], "test_create_voting_from_api() (voting.tests.votingtestcase method)": [[10, "voting.tests.VotingTestCase.test_create_voting_from_api"]], "test_create_voting_from_api_comment() (voting.tests.votingtestcase method)": [[10, "voting.tests.VotingTestCase.test_create_voting_from_api_comment"]], "test_question() (voting.tests.questiontestcases method)": [[10, "voting.tests.QuestionTestCases.test_question"]], "test_question_option() (voting.tests.questiontestcases method)": [[10, "voting.tests.QuestionTestCases.test_question_option"]], "test_question_option_comment_error_str() (voting.tests.questiontestcases method)": [[10, "voting.tests.QuestionTestCases.test_question_option_comment_error_str"]], "test_question_option_error() (voting.tests.questiontestcases method)": [[10, "voting.tests.QuestionTestCases.test_question_option_error"]], "test_question_option_error_str() (voting.tests.questiontestcases method)": [[10, "voting.tests.QuestionTestCases.test_question_option_error_str"]], "test_question_option_to_string() (voting.tests.questiontestcases method)": [[10, "voting.tests.QuestionTestCases.test_question_option_to_string"]], "test_question_option_yesno() (voting.tests.questiontestcases method)": [[10, "voting.tests.QuestionTestCases.test_question_option_yesno"]], "test_question_option_yesno_error() (voting.tests.questiontestcases method)": [[10, "voting.tests.QuestionTestCases.test_question_option_yesno_error"]], "test_question_option_yesno_error_str() (voting.tests.questiontestcases method)": [[10, "voting.tests.QuestionTestCases.test_question_option_yesno_error_str"]], "test_question_option_yesno_to_string() (voting.tests.questiontestcases method)": [[10, "voting.tests.QuestionTestCases.test_question_option_yesno_to_string"]], "test_question_to_string() (voting.tests.questiontestcases method)": [[10, "voting.tests.QuestionTestCases.test_question_to_string"]], "test_update_voting() (voting.tests.votingtestcase method)": [[10, "voting.tests.VotingTestCase.test_update_voting"]], "title (voting.filters.startedfilter attribute)": [[10, "voting.filters.StartedFilter.title"]], "type (voting.models.question attribute)": [[10, "voting.models.Question.type"]], "usernamewronglogin() (voting.tests.loginerrortests method)": [[10, "voting.tests.LogInErrorTests.usernameWrongLogIn"]], "voting (voting.models.question attribute)": [[10, "voting.models.Question.voting"]], "voting.admin": [[10, "module-voting.admin"]], "voting.filters": [[10, "module-voting.filters"]], "voting.models": [[10, "module-voting.models"]], "voting.serializers": [[10, "module-voting.serializers"]], "voting.tests": [[10, "module-voting.tests"]], "voting.views": [[10, "module-voting.views"]], "yesno_options (voting.models.question attribute)": [[10, "voting.models.Question.yesno_options"]]}})